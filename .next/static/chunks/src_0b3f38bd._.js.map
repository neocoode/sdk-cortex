{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/elioglima/projects/neocoode/sdk-cortex/plugins/luma/src/modules/session/slice.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n\n// src/store/modules/session/slice.ts\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface SessionState {\n  valid: boolean;\n  loading: boolean;\n  userId: string | null;\n  token: string | null;\n  chatId: string | null;\n}\n\nconst initialState: SessionState = {\n  valid: false,\n  loading: false,\n  userId: null,\n  token: null,\n  chatId: null,\n};\n\nconst sessionSlice = createSlice({\n  name: 'session',\n  initialState,\n  reducers: {\n    validateSessionRequest: (state) => {\n      console.log('üîÑ Iniciando valida√ß√£o da sess√£o...');\n      state.loading = true;\n    },\n    validateSessionSuccess: (state, action: PayloadAction<any>) => {\n      console.log('‚úÖ Sess√£o validada com sucesso:', action.payload);\n      state.loading = false;\n      state.valid = true;\n      state.userId = action.payload.userId;\n      state.token = action.payload.token;\n      state.chatId = action.payload.chatId;\n    },\n    validateSessionFailure: (state) => {\n      console.log('‚ùå Falha na valida√ß√£o da sess√£o');\n      state.loading = false;\n      state.valid = false;\n    },\n  },\n});\n\nexport const {\n  validateSessionRequest,\n  validateSessionSuccess,\n  validateSessionFailure,\n} = sessionSlice.actions;\n\nexport default sessionSlice.reducer;\n"],"names":[],"mappings":"AAAA,qDAAqD,GAErD,qCAAqC;;;;;;;AACrC;;AAUA,MAAM,eAA6B;IACjC,OAAO;IACP,SAAS;IACT,QAAQ;IACR,OAAO;IACP,QAAQ;AACV;AAEA,MAAM,eAAe,CAAA,GAAA,8LAAA,CAAA,cAAW,AAAD,EAAE;IAC/B,MAAM;IACN;IACA,UAAU;QACR,wBAAwB,CAAC;YACvB,QAAQ,GAAG,CAAC;YACZ,MAAM,OAAO,GAAG;QAClB;QACA,wBAAwB,CAAC,OAAO;YAC9B,QAAQ,GAAG,CAAC,kCAAkC,OAAO,OAAO;YAC5D,MAAM,OAAO,GAAG;YAChB,MAAM,KAAK,GAAG;YACd,MAAM,MAAM,GAAG,OAAO,OAAO,CAAC,MAAM;YACpC,MAAM,KAAK,GAAG,OAAO,OAAO,CAAC,KAAK;YAClC,MAAM,MAAM,GAAG,OAAO,OAAO,CAAC,MAAM;QACtC;QACA,wBAAwB,CAAC;YACvB,QAAQ,GAAG,CAAC;YACZ,MAAM,OAAO,GAAG;YAChB,MAAM,KAAK,GAAG;QAChB;IACF;AACF;AAEO,MAAM,EACX,sBAAsB,EACtB,sBAAsB,EACtB,sBAAsB,EACvB,GAAG,aAAa,OAAO;uCAET,aAAa,OAAO","debugId":null}},
    {"offset": {"line": 57, "column": 0}, "map": {"version":3,"sources":["file:///Users/elioglima/projects/neocoode/sdk-cortex/plugins/luma/src/store/rootReducer.ts"],"sourcesContent":["// src/store/rootReducer.ts\nimport { combineReducers } from '@reduxjs/toolkit';\nimport sessionReducer from '@/modules/session/slice';\n\nexport const rootReducer = combineReducers({\n  session: sessionReducer,\n});\n"],"names":[],"mappings":"AAAA,2BAA2B;;;;AAC3B;AACA;;;AAEO,MAAM,cAAc,CAAA,GAAA,0IAAA,CAAA,kBAAe,AAAD,EAAE;IACzC,SAAS,qIAAA,CAAA,UAAc;AACzB","debugId":null}},
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"sources":["file:///Users/elioglima/projects/neocoode/sdk-cortex/plugins/luma/src/services/apiSercice.ts"],"sourcesContent":["\ntype Json = Record<string, any>;\n\nexport class ApiService {\n  private api: HttpClient;\n\n  constructor(baseUrl?: string, token?: string) {\n    const resolvedBaseUrl = baseUrl || process.env.NEXT_PUBLIC_API_URL || '';\n\n    if (!resolvedBaseUrl.trim()) {\n      throw new Error('‚ùå NEXT_PUBLIC_API_URL n√£o est√° definida ou est√° vazia');\n    }\n\n    this.api = new HttpClient(resolvedBaseUrl, {\n      headers: token ? { Authorization: `Bearer ${token}` } : {},\n    });\n  }\n\n  async validateSession(): Promise<Json> {\n    return this.api.get<Json>('/chat/session');\n  }\n\n  async startSession(userId: string): Promise<Json> {\n    return this.api.post<Json>('/chat/start-session', {}, {\n      headers: { userid: userId },\n    });\n  }\n\n  async getUserProfile(): Promise<Json> {\n    return this.api.get<Json>('/u/p');\n  }\n\n  async listChats(): Promise<Json[]> {\n    const data = await this.api.get<Json>('/chat/list');\n    return Array.isArray(data.chats) ? data.chats : [];\n  }\n\n  async sendMessage(message: string): Promise<Json> {\n    return this.api.post<Json>('/chat/message', { message });\n  }\n}\n"],"names":[],"mappings":";;;AAOuC;AAJhC,MAAM;IACH,IAAgB;IAExB,YAAY,OAAgB,EAAE,KAAc,CAAE;QAC5C,MAAM,kBAAkB,wEAA8C;QAEtE,IAAI,CAAC,gBAAgB,IAAI,IAAI;YAC3B,MAAM,IAAI,MAAM;QAClB;QAEA,IAAI,CAAC,GAAG,GAAG,IAAI,WAAW,iBAAiB;YACzC,SAAS,QAAQ;gBAAE,eAAe,CAAC,OAAO,EAAE,OAAO;YAAC,IAAI,CAAC;QAC3D;IACF;IAEA,MAAM,kBAAiC;QACrC,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAO;IAC5B;IAEA,MAAM,aAAa,MAAc,EAAiB;QAChD,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAO,uBAAuB,CAAC,GAAG;YACpD,SAAS;gBAAE,QAAQ;YAAO;QAC5B;IACF;IAEA,MAAM,iBAAgC;QACpC,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAO;IAC5B;IAEA,MAAM,YAA6B;QACjC,MAAM,OAAO,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CAAO;QACtC,OAAO,MAAM,OAAO,CAAC,KAAK,KAAK,IAAI,KAAK,KAAK,GAAG,EAAE;IACpD;IAEA,MAAM,YAAY,OAAe,EAAiB;QAChD,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAO,iBAAiB;YAAE;QAAQ;IACxD;AACF","debugId":null}},
    {"offset": {"line": 126, "column": 0}, "map": {"version":3,"sources":["file:///Users/elioglima/projects/neocoode/sdk-cortex/plugins/luma/src/modules/session/saga.ts"],"sourcesContent":["'use client';\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n// src/store/modules/session/saga.ts\nimport { ApiService } from '@/services/apiSercice';\nimport { call, put, takeLatest } from 'redux-saga/effects';\nimport {\n  validateSessionFailure,\n  validateSessionRequest\n} from './slice';\n\nconst handleValidateSession = function* (): any {\n  const mockUserId = \"67cfa19fbca330b02331873d\";\n  console.log('üîÑ Iniciando valida√ß√£o da sess√£o no saga...');\n  try {\n    const api = new ApiService(); \n    yield call([api, api.startSession], mockUserId);\n    return;\n\n  } catch (err: any) {\n    console.error('üí• Erro ao validar sess√£o:', err);\n    yield put(validateSessionFailure());\n  }\n}\n\n\nexport default function* sessionSaga() {\n  console.log('üöÄ Inicializando saga de sess√£o');\n  yield takeLatest(validateSessionRequest.type, handleValidateSession);\n}\n"],"names":[],"mappings":";;;AAEA,oDAAoD,GACpD,qDAAqD,GAErD,oCAAoC;AACpC;AACA;AAAA;AAAA;AAAA;AACA;AARA;;;;AAaA,MAAM,wBAAwB;IAC5B,MAAM,aAAa;IACnB,QAAQ,GAAG,CAAC;IACZ,IAAI;QACF,MAAM,MAAM,IAAI,gIAAA,CAAA,aAAU;QAC1B,MAAM,CAAA,GAAA,iMAAA,CAAA,OAAI,AAAD,EAAE;YAAC;YAAK,IAAI,YAAY;SAAC,EAAE;QACpC;IAEF,EAAE,OAAO,KAAU;QACjB,QAAQ,KAAK,CAAC,8BAA8B;QAC5C,MAAM,CAAA,GAAA,gMAAA,CAAA,MAAG,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,yBAAsB,AAAD;IACjC;AACF;AAGe,UAAU;IACvB,QAAQ,GAAG,CAAC;IACZ,MAAM,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE,qIAAA,CAAA,yBAAsB,CAAC,IAAI,EAAE;AAChD","debugId":null}},
    {"offset": {"line": 168, "column": 0}, "map": {"version":3,"sources":["file:///Users/elioglima/projects/neocoode/sdk-cortex/plugins/luma/src/store/rootSaga.ts"],"sourcesContent":["// src/store/rootSaga.ts\nimport { all } from 'redux-saga/effects';\nimport sessionSaga from '@/modules/session/saga';\n\nexport default function* rootSaga() {\n  yield all([sessionSaga()]);\n}\n"],"names":[],"mappings":"AAAA,wBAAwB;;;;AACxB;AAAA;AACA;;;AAEe,UAAU;IACvB,MAAM,CAAA,GAAA,iMAAA,CAAA,MAAG,AAAD,EAAE;QAAC,CAAA,GAAA,oIAAA,CAAA,UAAW,AAAD;KAAI;AAC3B","debugId":null}},
    {"offset": {"line": 191, "column": 0}, "map": {"version":3,"sources":["file:///Users/elioglima/projects/neocoode/sdk-cortex/plugins/luma/src/store/index.ts"],"sourcesContent":["// src/store/index.ts\nimport { configureStore } from '@reduxjs/toolkit';\nimport createSagaMiddleware from 'redux-saga';\nimport { rootReducer } from './rootReducer';\nimport rootSaga from './rootSaga';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({ thunk: false }).concat(sagaMiddleware),\n});\n\nsagaMiddleware.run(rootSaga);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n"],"names":[],"mappings":"AAAA,qBAAqB;;;;AACrB;AACA;AAAA;AACA;AACA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,wMAAA,CAAA,UAAoB,AAAD;AAEnC,MAAM,QAAQ,CAAA,GAAA,8LAAA,CAAA,iBAAc,AAAD,EAAE;IAClC,SAAS,8HAAA,CAAA,cAAW;IACpB,YAAY,CAAC,uBACX,qBAAqB;YAAE,OAAO;QAAM,GAAG,MAAM,CAAC;AAClD;AAEA,eAAe,GAAG,CAAC,2HAAA,CAAA,UAAQ","debugId":null}},
    {"offset": {"line": 221, "column": 0}, "map": {"version":3,"sources":["file:///Users/elioglima/projects/neocoode/sdk-cortex/plugins/luma/src/app/providers.tsx"],"sourcesContent":["'use client';\n\nimport { Provider } from 'react-redux';\nimport { store } from '../store';\n\nexport function Providers({ children }: { children: React.ReactNode }) {\n  return <Provider store={store}>{children}</Provider>;\n} "],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKO,SAAS,UAAU,EAAE,QAAQ,EAAiC;IACnE,qBAAO,6LAAC,4JAAA,CAAA,WAAQ;QAAC,OAAO,wHAAA,CAAA,QAAK;kBAAG;;;;;;AAClC;KAFgB","debugId":null}}]
}