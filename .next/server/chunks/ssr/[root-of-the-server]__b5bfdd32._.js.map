{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/elioglima/projects/neocoode/sdk-cortex/plugins/luma/src/modules/session/slice.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n\n// src/store/modules/session/slice.ts\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface SessionState {\n  valid: boolean;\n  loading: boolean;\n  userId: string | null;\n  token: string | null;\n  chatId: string | null;\n}\n\nconst initialState: SessionState = {\n  valid: false,\n  loading: false,\n  userId: null,\n  token: null,\n  chatId: null,\n};\n\nconst sessionSlice = createSlice({\n  name: 'session',\n  initialState,\n  reducers: {\n    validateSessionRequest: (state) => {\n      console.log('üîÑ Iniciando valida√ß√£o da sess√£o...');\n      state.loading = true;\n    },\n    validateSessionSuccess: (state, action: PayloadAction<any>) => {\n      console.log('‚úÖ Sess√£o validada com sucesso:', action.payload);\n      state.loading = false;\n      state.valid = true;\n      state.userId = action.payload.userId;\n      state.token = action.payload.token;\n    },\n    validateSessionFailure: (state) => {\n      console.log('‚ùå Falha na valida√ß√£o da sess√£o');\n      state.loading = false;\n      state.valid = false;\n    },\n  },\n});\n\nexport const {\n  validateSessionRequest,\n  validateSessionSuccess,\n  validateSessionFailure,\n} = sessionSlice.actions;\n\nexport default sessionSlice.reducer;\n"],"names":[],"mappings":"AAAA,qDAAqD,GAErD,qCAAqC;;;;;;;AACrC;;AAUA,MAAM,eAA6B;IACjC,OAAO;IACP,SAAS;IACT,QAAQ;IACR,OAAO;IACP,QAAQ;AACV;AAEA,MAAM,eAAe,CAAA,GAAA,2LAAA,CAAA,cAAW,AAAD,EAAE;IAC/B,MAAM;IACN;IACA,UAAU;QACR,wBAAwB,CAAC;YACvB,QAAQ,GAAG,CAAC;YACZ,MAAM,OAAO,GAAG;QAClB;QACA,wBAAwB,CAAC,OAAO;YAC9B,QAAQ,GAAG,CAAC,kCAAkC,OAAO,OAAO;YAC5D,MAAM,OAAO,GAAG;YAChB,MAAM,KAAK,GAAG;YACd,MAAM,MAAM,GAAG,OAAO,OAAO,CAAC,MAAM;YACpC,MAAM,KAAK,GAAG,OAAO,OAAO,CAAC,KAAK;QACpC;QACA,wBAAwB,CAAC;YACvB,QAAQ,GAAG,CAAC;YACZ,MAAM,OAAO,GAAG;YAChB,MAAM,KAAK,GAAG;QAChB;IACF;AACF;AAEO,MAAM,EACX,sBAAsB,EACtB,sBAAsB,EACtB,sBAAsB,EACvB,GAAG,aAAa,OAAO;uCAET,aAAa,OAAO","debugId":null}},
    {"offset": {"line": 61, "column": 0}, "map": {"version":3,"sources":["file:///Users/elioglima/projects/neocoode/sdk-cortex/plugins/luma/src/store/rootReducer.ts"],"sourcesContent":["// src/store/rootReducer.ts\nimport { combineReducers } from '@reduxjs/toolkit';\nimport sessionReducer from '@/modules/session/slice';\n\nexport const rootReducer = combineReducers({\n  session: sessionReducer,\n});\n"],"names":[],"mappings":"AAAA,2BAA2B;;;;AAC3B;AACA;;;AAEO,MAAM,cAAc,CAAA,GAAA,uIAAA,CAAA,kBAAe,AAAD,EAAE;IACzC,SAAS,kIAAA,CAAA,UAAc;AACzB","debugId":null}},
    {"offset": {"line": 78, "column": 0}, "map": {"version":3,"sources":["file:///Users/elioglima/projects/neocoode/sdk-cortex/plugins/luma/src/services/httpClient.ts"],"sourcesContent":["// src/services/HttpClient.ts\n'use client';\n\ntype HttpMethod = 'GET' | 'POST' | 'PUT' | 'DELETE' | 'PATCH';\n\ninterface HttpOptions {\n  headers?: Record<string, string>;\n  cache?: RequestCache;\n}\n\nexport class HttpClient {\n  \n  private baseUrl: string;\n  private defaultHeaders: Record<string, string>;\n\n  constructor(baseURL: string, defaultOptions: HttpOptions = {}) {\n    this.baseUrl = baseURL;\n    this.defaultHeaders = {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json',\n      ...(defaultOptions.headers ? defaultOptions.headers : {})\n    };\n\n    console.log('üîÑ [HttpClient] defaultHeaders:', this.defaultHeaders);\n  }\n\n  setToken(token: string) {\n    this.defaultHeaders = {\n      ...this.defaultHeaders,\n      ...(token ? { 'Authorization': `Bearer ${token}` } : {})\n    }\n  }\n\n  private async request<T = any>(\n    method: HttpMethod,\n    url: string,\n    data?: any,\n    options: HttpOptions = {}\n  ): Promise<T> {\n    const fullUrl = `${this.baseUrl}${url}`;\n    const headers = {\n      ...this.defaultHeaders,\n      ...(options.headers ? options.headers : {})\n    };\n\n    console.log('üîÑ [HttpClient] headers:', headers);\n\n    const dataRequest = {\n      method,\n      headers,\n      body: data ? JSON.stringify(data) : undefined,\n      cache: options.cache || 'no-store',\n    }\n\n    console.log('üîÑ [HttpClient] dataRequest:', dataRequest);\n\n    const response = await fetch(fullUrl, dataRequest);\n\n    if (!response.ok) {\n      const errorBody = await response.text();\n      console.error(`‚ùå [${method}] ${url} falhou:`, errorBody);\n      throw new Error(`HTTP ${response.status}: ${errorBody}`);\n    }\n\n    const contentType = response.headers.get('content-type') || '';\n    if (contentType.includes('application/json')) {\n      return response.json() as Promise<T>;\n    }\n\n    // fallback para texto\n    return response.text() as unknown as T;\n  }\n\n  public get<T = any>(url: string, options?: HttpOptions): Promise<T> {\n    return this.request<T>('GET', url, undefined, options);\n  }\n\n  public post<T = any>(url: string, data?: any, options?: HttpOptions): Promise<T> {\n    return this.request<T>('POST', url, data, options);\n  }\n\n  public put<T = any>(url: string, data?: any, options?: HttpOptions): Promise<T> {\n    return this.request<T>('PUT', url, data, options);\n  }\n\n  public patch<T = any>(url: string, data?: any, options?: HttpOptions): Promise<T> {\n    return this.request<T>('PATCH', url, data, options);\n  }\n\n  public delete<T = any>(url: string, options?: HttpOptions): Promise<T> {\n    return this.request<T>('DELETE', url, undefined, options);\n  }\n}\n"],"names":[],"mappings":"AAAA,6BAA6B;;;;AAC7B;AASO,MAAM;IAEH,QAAgB;IAChB,eAAuC;IAE/C,YAAY,OAAe,EAAE,iBAA8B,CAAC,CAAC,CAAE;QAC7D,IAAI,CAAC,OAAO,GAAG;QACf,IAAI,CAAC,cAAc,GAAG;YACpB,gBAAgB;YAChB,UAAU;YACV,GAAI,eAAe,OAAO,GAAG,eAAe,OAAO,GAAG,CAAC,CAAC;QAC1D;QAEA,QAAQ,GAAG,CAAC,mCAAmC,IAAI,CAAC,cAAc;IACpE;IAEA,SAAS,KAAa,EAAE;QACtB,IAAI,CAAC,cAAc,GAAG;YACpB,GAAG,IAAI,CAAC,cAAc;YACtB,GAAI,QAAQ;gBAAE,iBAAiB,CAAC,OAAO,EAAE,OAAO;YAAC,IAAI,CAAC,CAAC;QACzD;IACF;IAEA,MAAc,QACZ,MAAkB,EAClB,GAAW,EACX,IAAU,EACV,UAAuB,CAAC,CAAC,EACb;QACZ,MAAM,UAAU,GAAG,IAAI,CAAC,OAAO,GAAG,KAAK;QACvC,MAAM,UAAU;YACd,GAAG,IAAI,CAAC,cAAc;YACtB,GAAI,QAAQ,OAAO,GAAG,QAAQ,OAAO,GAAG,CAAC,CAAC;QAC5C;QAEA,QAAQ,GAAG,CAAC,4BAA4B;QAExC,MAAM,cAAc;YAClB;YACA;YACA,MAAM,OAAO,KAAK,SAAS,CAAC,QAAQ;YACpC,OAAO,QAAQ,KAAK,IAAI;QAC1B;QAEA,QAAQ,GAAG,CAAC,gCAAgC;QAE5C,MAAM,WAAW,MAAM,MAAM,SAAS;QAEtC,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,YAAY,MAAM,SAAS,IAAI;YACrC,QAAQ,KAAK,CAAC,CAAC,GAAG,EAAE,OAAO,EAAE,EAAE,IAAI,QAAQ,CAAC,EAAE;YAC9C,MAAM,IAAI,MAAM,CAAC,KAAK,EAAE,SAAS,MAAM,CAAC,EAAE,EAAE,WAAW;QACzD;QAEA,MAAM,cAAc,SAAS,OAAO,CAAC,GAAG,CAAC,mBAAmB;QAC5D,IAAI,YAAY,QAAQ,CAAC,qBAAqB;YAC5C,OAAO,SAAS,IAAI;QACtB;QAEA,sBAAsB;QACtB,OAAO,SAAS,IAAI;IACtB;IAEO,IAAa,GAAW,EAAE,OAAqB,EAAc;QAClE,OAAO,IAAI,CAAC,OAAO,CAAI,OAAO,KAAK,WAAW;IAChD;IAEO,KAAc,GAAW,EAAE,IAAU,EAAE,OAAqB,EAAc;QAC/E,OAAO,IAAI,CAAC,OAAO,CAAI,QAAQ,KAAK,MAAM;IAC5C;IAEO,IAAa,GAAW,EAAE,IAAU,EAAE,OAAqB,EAAc;QAC9E,OAAO,IAAI,CAAC,OAAO,CAAI,OAAO,KAAK,MAAM;IAC3C;IAEO,MAAe,GAAW,EAAE,IAAU,EAAE,OAAqB,EAAc;QAChF,OAAO,IAAI,CAAC,OAAO,CAAI,SAAS,KAAK,MAAM;IAC7C;IAEO,OAAgB,GAAW,EAAE,OAAqB,EAAc;QACrE,OAAO,IAAI,CAAC,OAAO,CAAI,UAAU,KAAK,WAAW;IACnD;AACF","debugId":null}},
    {"offset": {"line": 152, "column": 0}, "map": {"version":3,"sources":["file:///Users/elioglima/projects/neocoode/sdk-cortex/plugins/luma/src/services/apiSercice.ts"],"sourcesContent":["'use client';\n\nimport { HttpClient } from \"./httpClient\";\n\ntype Json = Record<string, any>;\n\nexport class ApiService {\n  private api: HttpClient;\n\n  constructor(baseUrl?: string, token?: string) {\n    const resolvedBaseUrl = baseUrl || process.env.NEXT_PUBLIC_API_URL || '';\n\n    if (!resolvedBaseUrl.trim()) {\n      throw new Error('‚ùå NEXT_PUBLIC_API_URL n√£o est√° definida ou est√° vazia');\n    }\n\n    this.api = new HttpClient(resolvedBaseUrl, {\n      headers: {\n        ...(token ? { Authorization: `Bearer ${token}` } : {}),\n      },\n    });\n  }\n\n  async setToken(token: string): Promise<void> {\n    this.api.setToken(token);\n  }\n\n  async validateSession(): Promise<Json> {    \n    return this.api.get<Json>('/chat/session');\n  }\n\n  async startSession(userId: string): Promise<Json> {\n    return this.api.post<Json>('/chat/start-session', {}, {\n      headers: { usid: userId },\n    });\n  }\n\n  async getUserProfile(): Promise<Json> {\n    return this.api.get<Json>('/u/p');\n  }\n\n  async listChats(): Promise<Json[]> {\n    const data = await this.api.get<Json>('/chat/list');\n    return Array.isArray(data.chats) ? data.chats : [];\n  }\n\n  async sendMessage(message: string): Promise<Json> {\n    return this.api.post<Json>('/chat/message', { message });\n  }\n}\n"],"names":[],"mappings":";;;AAEA;AAFA;;AAMO,MAAM;IACH,IAAgB;IAExB,YAAY,OAAgB,EAAE,KAAc,CAAE;QAC5C,MAAM,kBAAkB,wEAA8C;QAEtE,IAAI,CAAC,gBAAgB,IAAI,IAAI;YAC3B,MAAM,IAAI,MAAM;QAClB;QAEA,IAAI,CAAC,GAAG,GAAG,IAAI,6HAAA,CAAA,aAAU,CAAC,iBAAiB;YACzC,SAAS;gBACP,GAAI,QAAQ;oBAAE,eAAe,CAAC,OAAO,EAAE,OAAO;gBAAC,IAAI,CAAC,CAAC;YACvD;QACF;IACF;IAEA,MAAM,SAAS,KAAa,EAAiB;QAC3C,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC;IACpB;IAEA,MAAM,kBAAiC;QACrC,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAO;IAC5B;IAEA,MAAM,aAAa,MAAc,EAAiB;QAChD,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAO,uBAAuB,CAAC,GAAG;YACpD,SAAS;gBAAE,MAAM;YAAO;QAC1B;IACF;IAEA,MAAM,iBAAgC;QACpC,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAO;IAC5B;IAEA,MAAM,YAA6B;QACjC,MAAM,OAAO,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CAAO;QACtC,OAAO,MAAM,OAAO,CAAC,KAAK,KAAK,IAAI,KAAK,KAAK,GAAG,EAAE;IACpD;IAEA,MAAM,YAAY,OAAe,EAAiB;QAChD,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAO,iBAAiB;YAAE;QAAQ;IACxD;AACF","debugId":null}},
    {"offset": {"line": 205, "column": 0}, "map": {"version":3,"sources":["file:///Users/elioglima/projects/neocoode/sdk-cortex/plugins/luma/src/modules/session/saga.ts"],"sourcesContent":["'use client';\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n// src/store/modules/session/saga.ts\nimport { ApiService } from '@/services/apiSercice';\nimport { call, put, takeLatest } from 'redux-saga/effects';\nimport {\n  validateSessionFailure,\n  validateSessionRequest,\n  validateSessionSuccess\n} from './slice';\n\nconst handleValidateSession = function* ({ token }: { token: string }): any {\n  const mockUserId = \"67cfa19fbca330b02331873d\";\n  console.log('üîÑ Iniciando valida√ß√£o da sess√£o no saga...');\n  console.log('üîÑ Token:', token);\n  // const token = yield select((state: RootState) => state.session.token);\n  try {\n    const api = new ApiService(token);\n\n    if (!token) {\n      const response = yield call([api, api.startSession], mockUserId);\n      console.log('üîÑ Resposta da sess√£o:', response);\n\n      api.setToken(response.token);\n      \n      // Revalida a sess√£o ap√≥s iniciar      \n      const recheck = yield call([api, api.validateSession]);\n      if (!recheck.valid) {\n        throw new Error('Falha ao validar sess√£o ap√≥s rein√≠cio');\n      }\n\n      yield put(validateSessionSuccess({\n        userId: mockUserId,\n        token: response.token,\n        valid: true,\n      }));\n      return;\n    }\n\n    // Primeiro valida a sess√£o atual\n    const session = yield call([api, api.validateSession]);\n\n    // Se a sess√£o n√£o for v√°lida, inicia uma nova\n    if (!session.valid) {\n      yield call([api, api.startSession], mockUserId);\n\n      // Revalida a sess√£o ap√≥s iniciar\n      const recheck = yield call([api, api.validateSession]);\n      if (!recheck.valid) {\n        throw new Error('Falha ao validar sess√£o ap√≥s rein√≠cio');\n      }\n    }\n\n    // Verifica o perfil do usu√°rio\n    const profile = yield call([api, api.getUserProfile]);\n    if (!profile.success) {\n      throw new Error('Falha ao carregar perfil do usu√°rio');\n    }\n\n    return true;\n\n  } catch (err: any) {\n    console.error('üí• Erro ao validar sess√£o:', err);\n    yield put(validateSessionFailure());\n    return false;\n  }\n}\n\n\nexport default function* sessionSaga() {\n  console.log('üöÄ Inicializando saga de sess√£o');\n  yield takeLatest<any>(\n    validateSessionRequest.type,\n    handleValidateSession\n  );\n}\n"],"names":[],"mappings":";;;AAEA,oDAAoD,GACpD,qDAAqD,GAErD,oCAAoC;AACpC;AACA;AAAA;AAAA;AAAA;AACA;AARA;;;;AAcA,MAAM,wBAAwB,UAAW,EAAE,KAAK,EAAqB;IACnE,MAAM,aAAa;IACnB,QAAQ,GAAG,CAAC;IACZ,QAAQ,GAAG,CAAC,aAAa;IACzB,yEAAyE;IACzE,IAAI;QACF,MAAM,MAAM,IAAI,6HAAA,CAAA,aAAU,CAAC;QAE3B,IAAI,CAAC,OAAO;YACV,MAAM,WAAW,MAAM,CAAA,GAAA,8LAAA,CAAA,OAAI,AAAD,EAAE;gBAAC;gBAAK,IAAI,YAAY;aAAC,EAAE;YACrD,QAAQ,GAAG,CAAC,0BAA0B;YAEtC,IAAI,QAAQ,CAAC,SAAS,KAAK;YAE3B,uCAAuC;YACvC,MAAM,UAAU,MAAM,CAAA,GAAA,8LAAA,CAAA,OAAI,AAAD,EAAE;gBAAC;gBAAK,IAAI,eAAe;aAAC;YACrD,IAAI,CAAC,QAAQ,KAAK,EAAE;gBAClB,MAAM,IAAI,MAAM;YAClB;YAEA,MAAM,CAAA,GAAA,6LAAA,CAAA,MAAG,AAAD,EAAE,CAAA,GAAA,kIAAA,CAAA,yBAAsB,AAAD,EAAE;gBAC/B,QAAQ;gBACR,OAAO,SAAS,KAAK;gBACrB,OAAO;YACT;YACA;QACF;QAEA,iCAAiC;QACjC,MAAM,UAAU,MAAM,CAAA,GAAA,8LAAA,CAAA,OAAI,AAAD,EAAE;YAAC;YAAK,IAAI,eAAe;SAAC;QAErD,8CAA8C;QAC9C,IAAI,CAAC,QAAQ,KAAK,EAAE;YAClB,MAAM,CAAA,GAAA,8LAAA,CAAA,OAAI,AAAD,EAAE;gBAAC;gBAAK,IAAI,YAAY;aAAC,EAAE;YAEpC,iCAAiC;YACjC,MAAM,UAAU,MAAM,CAAA,GAAA,8LAAA,CAAA,OAAI,AAAD,EAAE;gBAAC;gBAAK,IAAI,eAAe;aAAC;YACrD,IAAI,CAAC,QAAQ,KAAK,EAAE;gBAClB,MAAM,IAAI,MAAM;YAClB;QACF;QAEA,+BAA+B;QAC/B,MAAM,UAAU,MAAM,CAAA,GAAA,8LAAA,CAAA,OAAI,AAAD,EAAE;YAAC;YAAK,IAAI,cAAc;SAAC;QACpD,IAAI,CAAC,QAAQ,OAAO,EAAE;YACpB,MAAM,IAAI,MAAM;QAClB;QAEA,OAAO;IAET,EAAE,OAAO,KAAU;QACjB,QAAQ,KAAK,CAAC,8BAA8B;QAC5C,MAAM,CAAA,GAAA,6LAAA,CAAA,MAAG,AAAD,EAAE,CAAA,GAAA,kIAAA,CAAA,yBAAsB,AAAD;QAC/B,OAAO;IACT;AACF;AAGe,UAAU;IACvB,QAAQ,GAAG,CAAC;IACZ,MAAM,CAAA,GAAA,kMAAA,CAAA,aAAU,AAAD,EACb,kIAAA,CAAA,yBAAsB,CAAC,IAAI,EAC3B;AAEJ","debugId":null}},
    {"offset": {"line": 293, "column": 0}, "map": {"version":3,"sources":["file:///Users/elioglima/projects/neocoode/sdk-cortex/plugins/luma/src/store/rootSaga.ts"],"sourcesContent":["// src/store/rootSaga.ts\nimport sessionSaga from '@/modules/session/saga';\nimport { all } from 'redux-saga/effects';\n\nexport default function* rootSaga() {\n  yield all([sessionSaga(), profileSaga()]);\n}\n"],"names":[],"mappings":"AAAA,wBAAwB;;;;AACxB;AACA;AAAA;;;AAEe,UAAU;IACvB,MAAM,CAAA,GAAA,8LAAA,CAAA,MAAG,AAAD,EAAE;QAAC,CAAA,GAAA,iIAAA,CAAA,UAAW,AAAD;QAAK;KAAc;AAC1C","debugId":null}},
    {"offset": {"line": 314, "column": 0}, "map": {"version":3,"sources":["file:///Users/elioglima/projects/neocoode/sdk-cortex/plugins/luma/src/store/index.ts"],"sourcesContent":["// src/store/index.ts\nimport { configureStore } from '@reduxjs/toolkit';\nimport createSagaMiddleware from 'redux-saga';\nimport { rootReducer } from './rootReducer';\nimport rootSaga from './rootSaga';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({ thunk: false }).concat(sagaMiddleware),\n});\n\nsagaMiddleware.run(rootSaga);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n"],"names":[],"mappings":"AAAA,qBAAqB;;;;AACrB;AACA;AAAA;AACA;AACA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,qMAAA,CAAA,UAAoB,AAAD;AAEnC,MAAM,QAAQ,CAAA,GAAA,2LAAA,CAAA,iBAAc,AAAD,EAAE;IAClC,SAAS,2HAAA,CAAA,cAAW;IACpB,YAAY,CAAC,uBACX,qBAAqB;YAAE,OAAO;QAAM,GAAG,MAAM,CAAC;AAClD;AAEA,eAAe,GAAG,CAAC,wHAAA,CAAA,UAAQ","debugId":null}},
    {"offset": {"line": 341, "column": 0}, "map": {"version":3,"sources":["file:///Users/elioglima/projects/neocoode/sdk-cortex/plugins/luma/src/app/providers.tsx"],"sourcesContent":["'use client';\n\nimport { Provider } from 'react-redux';\nimport { store } from '../store';\n\nexport function Providers({ children }: { children: React.ReactNode }) {\n  return <Provider store={store}>{children}</Provider>;\n} "],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKO,SAAS,UAAU,EAAE,QAAQ,EAAiC;IACnE,qBAAO,8OAAC,yJAAA,CAAA,WAAQ;QAAC,OAAO,qHAAA,CAAA,QAAK;kBAAG;;;;;;AAClC","debugId":null}}]
}