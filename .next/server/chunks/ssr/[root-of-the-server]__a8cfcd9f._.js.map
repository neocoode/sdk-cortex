{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///Users/elioglima/projects/neocoode/sdk-cortex/plugins/luma/src/components/customHeader.tsx"],"sourcesContent":["'use client';\nimport React from 'react';\nimport { Settings, Download, PanelLeftClose, PanelLeftOpen } from 'lucide-react';\n\nimport { useTheme } from '@/themes/themeContext';\n\ninterface CustomHeaderProps {\n    toggleSidebar: () => void;\n    isSidebarVisible: boolean;\n}\n\nconst CustomHeader: React.FC<CustomHeaderProps> = ({ toggleSidebar, isSidebarVisible }) => {\n    const { themeSelected } = useTheme();\n\n    return (\n        <header className={`flex h-18 p-4 ${themeSelected.shadows.small} flex justify-between items-center`}>\n            <div className=\"flex items-center\">\n                {isSidebarVisible ? \n                <PanelLeftClose size={28} className={`${themeSelected.colors.text} m-2 cursor-pointer`} strokeWidth={1} onClick={toggleSidebar} />\n                :\n                <PanelLeftOpen size={28} className={`${themeSelected.colors.text} m-2 cursor-pointer`} strokeWidth={1} onClick={toggleSidebar} />\n                }\n                <Settings size={28} className={`${themeSelected.colors.text} m-2 cursor-pointer`} strokeWidth={1} />\n                <div className={`${themeSelected.colors.text} ${themeSelected.typography.fontSize.large}`}></div>\n            </div>\n            <div className=\"flex items-center\">\n                <button\n                    className={`\n                        flex flex-row items-center justify-between \n                        ${themeSelected.borders.default} \n                        ${themeSelected.typography.fontSize.small} \n                        ${themeSelected.colors.text} \n                        ${themeSelected.borderRadius.xlarge} \n                        ${themeSelected.transitions.fast} \n                        bg-transparent hover:${themeSelected.colors.backgroundSecondary} \n                    `}>\n                    <Download\n                        size={20}\n                        className={`\n                            ml-3 mr-2 my-2 cursor-pointer\n                            ${themeSelected.colors.text} \n                        `}\n                        strokeWidth={1}\n                    />\n                    <span \n                        className={`\n                            mr-3 my-2 cursor-pointer\n                        ${themeSelected.colors.text} \n                        `}\n                    >Compartilhar</span>\n                </button>\n            </div>\n        </header>\n    );\n};\n\nexport default CustomHeader;\n"],"names":[],"mappings":";;;;AAEA;AAAA;AAAA;AAAA;AAEA;AAJA;;;;AAWA,MAAM,eAA4C,CAAC,EAAE,aAAa,EAAE,gBAAgB,EAAE;IAClF,MAAM,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,8HAAA,CAAA,WAAQ,AAAD;IAEjC,qBACI,8OAAC;QAAO,WAAW,CAAC,cAAc,EAAE,cAAc,OAAO,CAAC,KAAK,CAAC,kCAAkC,CAAC;;0BAC/F,8OAAC;gBAAI,WAAU;;oBACV,iCACD,8OAAC,8NAAA,CAAA,iBAAc;wBAAC,MAAM;wBAAI,WAAW,GAAG,cAAc,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC;wBAAE,aAAa;wBAAG,SAAS;;;;;6CAEjH,8OAAC,4NAAA,CAAA,gBAAa;wBAAC,MAAM;wBAAI,WAAW,GAAG,cAAc,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC;wBAAE,aAAa;wBAAG,SAAS;;;;;;kCAEhH,8OAAC,0MAAA,CAAA,WAAQ;wBAAC,MAAM;wBAAI,WAAW,GAAG,cAAc,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC;wBAAE,aAAa;;;;;;kCAC/F,8OAAC;wBAAI,WAAW,GAAG,cAAc,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,cAAc,UAAU,CAAC,QAAQ,CAAC,KAAK,EAAE;;;;;;;;;;;;0BAE7F,8OAAC;gBAAI,WAAU;0BACX,cAAA,8OAAC;oBACG,WAAW,CAAC;;wBAER,EAAE,cAAc,OAAO,CAAC,OAAO,CAAC;wBAChC,EAAE,cAAc,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC;wBAC1C,EAAE,cAAc,MAAM,CAAC,IAAI,CAAC;wBAC5B,EAAE,cAAc,YAAY,CAAC,MAAM,CAAC;wBACpC,EAAE,cAAc,WAAW,CAAC,IAAI,CAAC;6CACZ,EAAE,cAAc,MAAM,CAAC,mBAAmB,CAAC;oBACpE,CAAC;;sCACD,8OAAC,0MAAA,CAAA,WAAQ;4BACL,MAAM;4BACN,WAAW,CAAC;;4BAER,EAAE,cAAc,MAAM,CAAC,IAAI,CAAC;wBAChC,CAAC;4BACD,aAAa;;;;;;sCAEjB,8OAAC;4BACG,WAAW,CAAC;;wBAEZ,EAAE,cAAc,MAAM,CAAC,IAAI,CAAC;wBAC5B,CAAC;sCACJ;;;;;;;;;;;;;;;;;;;;;;;AAKrB;uCAEe","debugId":null}},
    {"offset": {"line": 154, "column": 0}, "map": {"version":3,"sources":["file:///Users/elioglima/projects/neocoode/sdk-cortex/plugins/luma/src/components/leftSidebar.tsx"],"sourcesContent":["'use client';\nimport React, { useEffect, useState } from 'react';\nimport { Plus } from 'lucide-react';\nimport { useTheme } from '@/themes/themeContext';\n\ninterface LeftSidebarProps {\n  onSelectChat?: (chatId: string) => void;\n  isSidebarVisible: boolean;\n}\n\nconst LeftSidebar: React.FC<LeftSidebarProps> = ({ onSelectChat, isSidebarVisible }) => {\n  const [renderContent, setRenderContent] = useState(isSidebarVisible);\n  const { themeSelected } = useTheme();\n\n  // Controla renderização interna com atraso para permitir a animação de fechamento\n  useEffect(() => {\n    if (isSidebarVisible) {\n      setRenderContent(true);\n    } else {\n      const timeout = setTimeout(() => setRenderContent(false), 300); // mesma duração da transição\n      return () => clearTimeout(timeout);\n    }\n  }, [isSidebarVisible]);\n\n  return (\n    <aside\n      className={`\n        bg-[#1e1e1e] \n        text-white \n        flex flex-col \n        h-full \n        overflow-hidden \n        transition-all \n        duration-300 \n        ${isSidebarVisible ? 'w-80 opacity-100' : 'w-0 opacity-0'}\n      `}\n    >\n      {renderContent && (\n        <>\n          {/* Topo */}\n          <div className=\"p-4 flex justify-between items-center\">\n            <h3 className=\"font-semibold text-2xl\">Luma Beta</h3>\n            <Plus\n              className={`\n              cursor-pointer\n              my-1\n              ${themeSelected.colors.text} \n            `}\n              size={30}\n            />\n          </div>\n\n          {/* Centro - Lista de Chats */}\n          <div className=\"flex-grow overflow-y-auto p-4\">\n            <div className=\"space-y-2\">\n              {/* <div className=\"p-2 hover:bg-gray-700 rounded-lg cursor-pointer\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"w-8 h-8 rounded-full bg-gray-600\"></div>\n                  <div>\n                    <p className=\"font-medium\">Chat #1</p>\n                    <p className=\"text-sm text-gray-400\">Última mensagem...</p>\n                  </div>\n                </div>\n              </div> */}\n            </div>\n          </div>\n\n          {/* Rodapé */}\n          <div className=\"p-4\">\n            {/* <button className=\"w-full py-2 px-4 bg-blue-600 hover:bg-blue-700 rounded-lg text-white font-medium transition-colors\">\n              Novo Chat\n            </button> */}\n          </div>\n        </>\n      )}\n    </aside>\n  );\n};\n\nexport default LeftSidebar;\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AAHA;;;;;AAUA,MAAM,cAA0C,CAAC,EAAE,YAAY,EAAE,gBAAgB,EAAE;IACjF,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnD,MAAM,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,8HAAA,CAAA,WAAQ,AAAD;IAEjC,kFAAkF;IAClF,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,kBAAkB;YACpB,iBAAiB;QACnB,OAAO;YACL,MAAM,UAAU,WAAW,IAAM,iBAAiB,QAAQ,MAAM,6BAA6B;YAC7F,OAAO,IAAM,aAAa;QAC5B;IACF,GAAG;QAAC;KAAiB;IAErB,qBACE,8OAAC;QACC,WAAW,CAAC;;;;;;;;QAQV,EAAE,mBAAmB,qBAAqB,gBAAgB;MAC5D,CAAC;kBAEA,+BACC;;8BAEE,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;sCAAyB;;;;;;sCACvC,8OAAC,kMAAA,CAAA,OAAI;4BACH,WAAW,CAAC;;;cAGZ,EAAE,cAAc,MAAM,CAAC,IAAI,CAAC;YAC9B,CAAC;4BACC,MAAM;;;;;;;;;;;;8BAKV,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAI,WAAU;;;;;;;;;;;8BAcjB,8OAAC;oBAAI,WAAU;;;;;;;;;;;;;AASzB;uCAEe","debugId":null}},
    {"offset": {"line": 258, "column": 0}, "map": {"version":3,"sources":["file:///Users/elioglima/projects/neocoode/sdk-cortex/plugins/luma/src/components/inputMessage/components/footer.tsx"],"sourcesContent":["'use client';\n\nimport { useTheme } from '@/themes/themeContext';\nimport React from 'react';\n\ninterface FooterProps {\n  version?: string;\n  date?: string;\n}\n\nconst Footer: React.FC<FooterProps> = ({\n  version = 'Beta',\n}) => {\n  const { themeSelected } = useTheme();\n\n  return (\n    <div \n      className={`\n        flex justify-center items-center pt-2 \n        ${themeSelected.typography.fontSize.medium} \n        ${themeSelected.colors.textSecondary}\n      `}\n    >\n      Luma {version} - {date}\n    </div>\n  );\n};\n\nexport default Footer; "],"names":[],"mappings":";;;;AAEA;AAFA;;;AAUA,MAAM,SAAgC,CAAC,EACrC,UAAU,MAAM,EACjB;IACC,MAAM,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,8HAAA,CAAA,WAAQ,AAAD;IAEjC,qBACE,8OAAC;QACC,WAAW,CAAC;;QAEV,EAAE,cAAc,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC;QAC3C,EAAE,cAAc,MAAM,CAAC,aAAa,CAAC;MACvC,CAAC;;YACF;YACO;YAAQ;YAAI;;;;;;;AAGxB;uCAEe","debugId":null}},
    {"offset": {"line": 293, "column": 0}, "map": {"version":3,"sources":["file:///Users/elioglima/projects/neocoode/sdk-cortex/plugins/luma/src/components/inputMessage/components/actionBar.tsx"],"sourcesContent":["'use client';\n\nimport { useTheme } from '@/themes/themeContext';\nimport { Mic, Plus, SendHorizonal } from 'lucide-react';\nimport React from 'react';\nimport Footer from './footer';\n\ninterface ActionBarProps {\n  value: string;\n  onAdd?: () => void;\n  onSubmit?: () => void;\n  version?: string;\n  date?: string;\n}\n\nconst ActionBar: React.FC<ActionBarProps> = ({\n  value,\n  onAdd,\n  onSubmit,\n  version,\n  date,\n}) => {\n  const { themeSelected } = useTheme();\n\n  return (\n    <div className=\"flex justify-between items-center px-4 pb-4\">\n      <Plus\n        className={`\n          cursor-pointer\n          ${themeSelected.colors.text} \n        `}\n        onClick={onAdd}\n        size={30}\n      />\n      <Footer version={version} />\n      {value.trim() ? (\n        <SendHorizonal\n          className={`\n            ${themeSelected.colors.text} \n            cursor-pointer\n          `}\n          onClick={onSubmit}\n          size={30}\n        />\n      ) : (\n        <Mic\n          className={`\n            ${themeSelected.colors.text} \n            cursor-pointer\n          `}\n          onClick={onSubmit}\n          size={30}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default ActionBar; "],"names":[],"mappings":";;;;AAEA;AACA;AAAA;AAAA;AAEA;AALA;;;;;AAeA,MAAM,YAAsC,CAAC,EAC3C,KAAK,EACL,KAAK,EACL,QAAQ,EACR,OAAO,EACP,IAAI,EACL;IACC,MAAM,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,8HAAA,CAAA,WAAQ,AAAD;IAEjC,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,kMAAA,CAAA,OAAI;gBACH,WAAW,CAAC;;UAEV,EAAE,cAAc,MAAM,CAAC,IAAI,CAAC;QAC9B,CAAC;gBACD,SAAS;gBACT,MAAM;;;;;;0BAER,8OAAC,0JAAA,CAAA,UAAM;gBAAC,SAAS;;;;;;YAChB,MAAM,IAAI,mBACT,8OAAC,yNAAA,CAAA,gBAAa;gBACZ,WAAW,CAAC;YACV,EAAE,cAAc,MAAM,CAAC,IAAI,CAAC;;UAE9B,CAAC;gBACD,SAAS;gBACT,MAAM;;;;;qCAGR,8OAAC,gMAAA,CAAA,MAAG;gBACF,WAAW,CAAC;YACV,EAAE,cAAc,MAAM,CAAC,IAAI,CAAC;;UAE9B,CAAC;gBACD,SAAS;gBACT,MAAM;;;;;;;;;;;;AAKhB;uCAEe","debugId":null}},
    {"offset": {"line": 368, "column": 0}, "map": {"version":3,"sources":["file:///Users/elioglima/projects/neocoode/sdk-cortex/plugins/luma/src/components/inputMessage/components/inputField.tsx"],"sourcesContent":["'use client';\n\nimport { useTheme } from '@/themes/themeContext';\nimport React, { useRef } from 'react';\n\ninterface InputFieldProps {\n  value: string;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  placeholder?: string;\n  onKeyDown?: (e: React.KeyboardEvent<HTMLInputElement>) => void;\n}\n\nconst InputField: React.FC<InputFieldProps> = ({\n  value,\n  onChange,\n  placeholder = 'Digite sua mensagem...',\n  onKeyDown,\n}) => {\n  const { themeSelected } = useTheme();\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  return (\n    <div className=\"flex-1\">\n      <input\n        ref={inputRef}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n        placeholder={placeholder}\n        onKeyDown={onKeyDown}\n        className={`\n          w-full py-1 px-2 bg-transparent outline-none \n          ${themeSelected.colors.text}\n          ${themeSelected.typography.fontSize.large}\n        `}\n      />\n    </div>\n  );\n};\n\nexport default InputField; "],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAYA,MAAM,aAAwC,CAAC,EAC7C,KAAK,EACL,QAAQ,EACR,cAAc,wBAAwB,EACtC,SAAS,EACV;IACC,MAAM,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,8HAAA,CAAA,WAAQ,AAAD;IACjC,MAAM,WAAW,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAoB;IAE1C,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,MAAK;YACL,OAAO;YACP,UAAU;YACV,aAAa;YACb,WAAW;YACX,WAAW,CAAC;;UAEV,EAAE,cAAc,MAAM,CAAC,IAAI,CAAC;UAC5B,EAAE,cAAc,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC;QAC5C,CAAC;;;;;;;;;;;AAIT;uCAEe","debugId":null}},
    {"offset": {"line": 413, "column": 0}, "map": {"version":3,"sources":["file:///Users/elioglima/projects/neocoode/sdk-cortex/plugins/luma/src/components/inputMessage/components/inputForm.tsx"],"sourcesContent":["'use client';\n\nimport { useTheme } from '@/themes/themeContext';\nimport React, { useRef } from 'react';\nimport ActionBar from './actionBar';\nimport InputField from './inputField';\n\ninterface InputFormProps {\n  onSend?: () => void;\n  onAdd?: () => void;\n  placeholder?: string;\n  value: string;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onSubmit?: (e?: React.FormEvent) => void;\n  version?: string;\n  date?: string;\n}\n\nconst InputForm: React.FC<InputFormProps> = ({\n  onAdd,\n  placeholder = 'Digite sua mensagem...',\n  value,\n  onChange,\n  onSubmit,\n  version,\n  date,\n}) => {\n  const { themeSelected } = useTheme();\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const onSubmitPrivate = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (inputRef.current) {\n      inputRef.current.value = '';\n    }\n    onSubmit?.();\n  }\n\n  const handleSubmit = (e?: React.FormEvent) => {\n    if (e) {\n      e.preventDefault();\n    }\n    onSubmit?.();\n  }\n\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      handleSubmit(e);\n      if (inputRef.current) {\n        inputRef.current.value = '';\n      }\n    }\n  };\n\n  return (\n    <form\n      onSubmit={onSubmitPrivate}\n      className={`\n        flex flex-col justify-between m-2 overflow-hidden \n        ${themeSelected.colors.backgroundPrimary} \n        ${themeSelected.borderRadius.xxxlarge} \n        ${themeSelected.shadows.medium}\n      `}\n    >\n      <div className=\"flex items-center p-3 w-full overflow-hidden\">\n        <div\n          className={`\n            flex items-center justify-between w-full p-1\n            ${themeSelected.colors.backgroundAccent} \n            ${themeSelected.borderRadius.xxlarge} \n          `}>\n          <InputField\n            value={value}\n            onChange={onChange}\n            placeholder={placeholder}\n            onKeyDown={handleKeyDown}\n          />\n        </div>\n      </div>\n      <ActionBar\n        value={value}\n        onAdd={onAdd}\n        onSubmit={handleSubmit}\n        version={version}\n        date={date}\n      />\n    </form>\n  );\n};\n\nexport default InputForm; "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AALA;;;;;;AAkBA,MAAM,YAAsC,CAAC,EAC3C,KAAK,EACL,cAAc,wBAAwB,EACtC,KAAK,EACL,QAAQ,EACR,QAAQ,EACR,OAAO,EACP,IAAI,EACL;IACC,MAAM,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,8HAAA,CAAA,WAAQ,AAAD;IACjC,MAAM,WAAW,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAoB;IAE1C,MAAM,kBAAkB,CAAC;QACvB,EAAE,cAAc;QAChB,IAAI,SAAS,OAAO,EAAE;YACpB,SAAS,OAAO,CAAC,KAAK,GAAG;QAC3B;QACA;IACF;IAEA,MAAM,eAAe,CAAC;QACpB,IAAI,GAAG;YACL,EAAE,cAAc;QAClB;QACA;IACF;IAEA,MAAM,gBAAgB,CAAC;QACrB,IAAI,EAAE,GAAG,KAAK,SAAS;YACrB,EAAE,cAAc;YAChB,aAAa;YACb,IAAI,SAAS,OAAO,EAAE;gBACpB,SAAS,OAAO,CAAC,KAAK,GAAG;YAC3B;QACF;IACF;IAEA,qBACE,8OAAC;QACC,UAAU;QACV,WAAW,CAAC;;QAEV,EAAE,cAAc,MAAM,CAAC,iBAAiB,CAAC;QACzC,EAAE,cAAc,YAAY,CAAC,QAAQ,CAAC;QACtC,EAAE,cAAc,OAAO,CAAC,MAAM,CAAC;MACjC,CAAC;;0BAED,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBACC,WAAW,CAAC;;YAEV,EAAE,cAAc,MAAM,CAAC,gBAAgB,CAAC;YACxC,EAAE,cAAc,YAAY,CAAC,OAAO,CAAC;UACvC,CAAC;8BACD,cAAA,8OAAC,8JAAA,CAAA,UAAU;wBACT,OAAO;wBACP,UAAU;wBACV,aAAa;wBACb,WAAW;;;;;;;;;;;;;;;;0BAIjB,8OAAC,6JAAA,CAAA,UAAS;gBACR,OAAO;gBACP,OAAO;gBACP,UAAU;gBACV,SAAS;gBACT,MAAM;;;;;;;;;;;;AAId;uCAEe","debugId":null}},
    {"offset": {"line": 514, "column": 0}, "map": {"version":3,"sources":["file:///Users/elioglima/projects/neocoode/sdk-cortex/plugins/luma/src/components/inputMessage/inputMessage.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport InputForm from './components/inputForm';\n\ninterface InputMessageProps {\n  onSend?: () => void;\n  onAdd?: () => void;\n  placeholder?: string;\n  value: string;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onSubmit?: (e?: React.FormEvent) => void;\n  version?: string;\n  date?: string;\n}\n\nconst InputMessage: React.FC<InputMessageProps> = (props) => {\n  return (\n    <footer className=\"flex flex-col m-1 mb-5 mx-[5%] pb-10\">\n      <InputForm {...props} />\n    </footer>\n  );\n};\n\nexport default InputMessage;\n"],"names":[],"mappings":";;;;AAGA;AAHA;;;AAgBA,MAAM,eAA4C,CAAC;IACjD,qBACE,8OAAC;QAAO,WAAU;kBAChB,cAAA,8OAAC,6JAAA,CAAA,UAAS;YAAE,GAAG,KAAK;;;;;;;;;;;AAG1B;uCAEe","debugId":null}},
    {"offset": {"line": 545, "column": 0}, "map": {"version":3,"sources":["file:///Users/elioglima/projects/neocoode/sdk-cortex/plugins/luma/src/components/processMessageStatus.tsx"],"sourcesContent":["import { RootState } from '@/store';\nimport { useSelector } from 'react-redux';\n\nconst ProcessMessageStatus: React.FC = () => {\n  const { loading, valid } = useSelector((state: RootState) => state.sendMessage);\n\n  return (\n    <div className={`w-full h-[1px] ${loading ? 'bg-green-500' : !valid ? 'bg-transparent' : 'bg-transparent'}`} />\n  );\n};\n\nexport default ProcessMessageStatus;\n"],"names":[],"mappings":";;;;AACA;;;AAEA,MAAM,uBAAiC;IACrC,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,yJAAA,CAAA,cAAW,AAAD,EAAE,CAAC,QAAqB,MAAM,WAAW;IAE9E,qBACE,8OAAC;QAAI,WAAW,CAAC,eAAe,EAAE,UAAU,iBAAiB,CAAC,QAAQ,mBAAmB,kBAAkB;;;;;;AAE/G;uCAEe","debugId":null}},
    {"offset": {"line": 569, "column": 0}, "map": {"version":3,"sources":["file:///Users/elioglima/projects/neocoode/sdk-cortex/plugins/luma/src/interface/chats.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n\nexport interface ResponseItem {\n\ttype: string,\n\torigin: string,\n\tvalue: string,\n}\n\nexport interface CoreMessageResponse {\n\ttitle: string,\n\tmessage: string,\n\tresume: string,\n\tresponse: ResponseItem[],\n}\n\nexport enum EMessageType {\n\tuser = 'user',\n\tmessage = 'message',\n\ttitle = 'title',\n\tlink = 'link',\n\ttable = 'table',\n\ttext = 'text',\n\tcode = 'code',\n\tdivider = 'divider',\n\tgroupLink = 'groupLink',\n\timageUrl = 'imageUrl',\n}\n\nexport interface IResponseChat {\n\ttype: EMessageType | string;\n\tvalue: string | string[];\n\tkey?: any;\n\tonReplay?: (value?: any) => void;\n}\n\n"],"names":[],"mappings":"AAAA,qDAAqD;;;AAe9C,IAAA,AAAK,sCAAA;;;;;;;;;;;WAAA","debugId":null}},
    {"offset": {"line": 591, "column": 0}, "map": {"version":3,"sources":["file:///Users/elioglima/projects/neocoode/sdk-cortex/plugins/luma/src/components/customCard.tsx"],"sourcesContent":["import { useTheme } from \"@/themes/themeContext\";\ninterface CustomCardProps {\n  title?: string;\n  rightIcon?: React.ReactNode;\n  children: React.ReactNode;\n}\n\nconst CustomCard: React.FC<CustomCardProps> = ({ title, rightIcon, children }) => {\n  const { themeSelected } = useTheme();\n\n  return (\n    <div className={`\n      w-full bg-[#4f4f4f] p-2 rounded-md\n      ${themeSelected.colors.backgroundTertiary}\n      ${themeSelected.borderRadius.xxlarge}\n      ${themeSelected.colors.textPrimary}\n    `}>\n      {(title || rightIcon) && (\n        <div className=\"flex justify-between items-center mb-1\">\n          {title && <h3 className={`\n            ${themeSelected.colors.text}\n            ${themeSelected.typography.fontSize.small}\n            ${themeSelected.typography.fontWeight.xbold}\n            `}>{title}</h3>}\n          {rightIcon && <div\n            className={`flex items-center m-2`}\n          >{rightIcon}</div>}\n        </div>\n      )}\n      <div className={`\n        w-full\n        ${themeSelected.colors.backgroundPrimary}\n        ${themeSelected.borderRadius.medium}\n      `}>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default CustomCard;\n"],"names":[],"mappings":";;;;AAAA;;;AAOA,MAAM,aAAwC,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,QAAQ,EAAE;IAC3E,MAAM,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,8HAAA,CAAA,WAAQ,AAAD;IAEjC,qBACE,8OAAC;QAAI,WAAW,CAAC;;MAEf,EAAE,cAAc,MAAM,CAAC,kBAAkB,CAAC;MAC1C,EAAE,cAAc,YAAY,CAAC,OAAO,CAAC;MACrC,EAAE,cAAc,MAAM,CAAC,WAAW,CAAC;IACrC,CAAC;;YACE,CAAC,SAAS,SAAS,mBAClB,8OAAC;gBAAI,WAAU;;oBACZ,uBAAS,8OAAC;wBAAG,WAAW,CAAC;YACxB,EAAE,cAAc,MAAM,CAAC,IAAI,CAAC;YAC5B,EAAE,cAAc,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC;YAC1C,EAAE,cAAc,UAAU,CAAC,UAAU,CAAC,KAAK,CAAC;YAC5C,CAAC;kCAAG;;;;;;oBACL,2BAAa,8OAAC;wBACb,WAAW,CAAC,qBAAqB,CAAC;kCAClC;;;;;;;;;;;;0BAGN,8OAAC;gBAAI,WAAW,CAAC;;QAEf,EAAE,cAAc,MAAM,CAAC,iBAAiB,CAAC;QACzC,EAAE,cAAc,YAAY,CAAC,MAAM,CAAC;MACtC,CAAC;0BACE;;;;;;;;;;;;AAIT;uCAEe","debugId":null}},
    {"offset": {"line": 663, "column": 0}, "map": {"version":3,"sources":["file:///Users/elioglima/projects/neocoode/sdk-cortex/plugins/luma/src/components/renderMessage/renderCode.tsx"],"sourcesContent":["import { IResponseChat } from \"@/interface/chats\";\nimport { useTheme } from \"@/themes/themeContext\";\nimport CustomCard from \"../customCard\";\nimport { Copy } from 'lucide-react';\n\nconst RenderCode: React.FC<IResponseChat> = ({ value, key }) => {\n  const { themeSelected } = useTheme();\n\n  return (\n    <CustomCard\n      key={key}\n      title=\"Código\"\n      rightIcon={<div>\n        <Copy\n          size={20}\n          className={`\n            cursor-pointer\n          ${themeSelected.colors.text} \n        `}\n        />\n      </div>}\n    >\n      <pre className={`\n        w-full flex flex-wrap\n        ${themeSelected.colors.text}\n        ${themeSelected.typography.fontSize.small}\n        bg-[#151515] p-4 rounded-md overflow-x-auto\n      `}>\n        <code>{value}</code>\n      </pre>\n    </CustomCard>\n  );\n};\n\nexport default RenderCode;\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;;;;;AAEA,MAAM,aAAsC,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE;IACzD,MAAM,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,8HAAA,CAAA,WAAQ,AAAD;IAEjC,qBACE,8OAAC,gIAAA,CAAA,UAAU;QAET,OAAM;QACN,yBAAW,8OAAC;sBACV,cAAA,8OAAC,kMAAA,CAAA,OAAI;gBACH,MAAM;gBACN,WAAW,CAAC;;UAEZ,EAAE,cAAc,MAAM,CAAC,IAAI,CAAC;QAC9B,CAAC;;;;;;;;;;;kBAIH,cAAA,8OAAC;YAAI,WAAW,CAAC;;QAEf,EAAE,cAAc,MAAM,CAAC,IAAI,CAAC;QAC5B,EAAE,cAAc,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC;;MAE5C,CAAC;sBACC,cAAA,8OAAC;0BAAM;;;;;;;;;;;OAlBJ;;;;;AAsBX;uCAEe","debugId":null}},
    {"offset": {"line": 727, "column": 0}, "map": {"version":3,"sources":["file:///Users/elioglima/projects/neocoode/sdk-cortex/plugins/luma/src/components/renderMessage/renderDivider.tsx"],"sourcesContent":["import { useTheme } from \"@/themes/themeContext\";\nconst RenderDivider: React.FC = () => {\n  const { themeSelected } = useTheme();\n\n  return (\n    <div \n      className={`\n        w-full flex items-center justify-center py-1 mt-2 mb-2      \n      `}\n    >\n      <div \n        className={`\n          w-full h-[2px]\n          ${themeSelected.colors.backgroundTertiary}\n          ${themeSelected.borderRadius.xxlarge}\n          ${themeSelected.shadows.medium}\n        `} \n      />\n    </div>\n  );\n};\n\nexport default RenderDivider;\n"],"names":[],"mappings":";;;;AAAA;;;AACA,MAAM,gBAA0B;IAC9B,MAAM,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,8HAAA,CAAA,WAAQ,AAAD;IAEjC,qBACE,8OAAC;QACC,WAAW,CAAC;;MAEZ,CAAC;kBAED,cAAA,8OAAC;YACC,WAAW,CAAC;;UAEV,EAAE,cAAc,MAAM,CAAC,kBAAkB,CAAC;UAC1C,EAAE,cAAc,YAAY,CAAC,OAAO,CAAC;UACrC,EAAE,cAAc,OAAO,CAAC,MAAM,CAAC;QACjC,CAAC;;;;;;;;;;;AAIT;uCAEe","debugId":null}},
    {"offset": {"line": 765, "column": 0}, "map": {"version":3,"sources":["file:///Users/elioglima/projects/neocoode/sdk-cortex/plugins/luma/src/components/renderMessage/renderLink.tsx"],"sourcesContent":["import { IResponseChat } from \"@/interface/chats\";\nimport { useTheme } from \"@/themes/themeContext\";\n\nconst RenderLink: React.FC<IResponseChat> = ({ value }) => {\n  const { themeSelected } = useTheme();\n\n  return (\n    <div className=\"flex flex-wrap pb-1\">\n      <a \n        target=\"_blank\" \n        rel=\"noopener noreferrer\" \n        className={`\n          text-blue-400 hover:text-blue-600 underline\n          ${themeSelected.typography.fontSize.large}\n        `}\n      >\n        {value}\n      </a>\n    </div>\n  );\n};\n\nexport default RenderLink;\n"],"names":[],"mappings":";;;;AACA;;;AAEA,MAAM,aAAsC,CAAC,EAAE,KAAK,EAAE;IACpD,MAAM,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,8HAAA,CAAA,WAAQ,AAAD;IAEjC,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,QAAO;YACP,KAAI;YACJ,WAAW,CAAC;;UAEV,EAAE,cAAc,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC;QAC5C,CAAC;sBAEA;;;;;;;;;;;AAIT;uCAEe","debugId":null}},
    {"offset": {"line": 802, "column": 0}, "map": {"version":3,"sources":["file:///Users/elioglima/projects/neocoode/sdk-cortex/plugins/luma/src/components/renderMessage/renderGroupLink.tsx"],"sourcesContent":["import { IResponseChat } from \"@/interface/chats\";\nimport { useTheme } from \"@/themes/themeContext\";\nimport RenderLink from \"./renderLink\";\n\nconst RenderGroupLink: React.FC<IResponseChat> = ({ value, type }) => {\n  const { themeSelected } = useTheme();\n\n  return (\n    <div className={`\n      flex flex-wrap my-3 flex-col\n    `}>\n      <div \n        className={`\n          flex\n          ${themeSelected.colors.text}\n          ${themeSelected.typography.fontSize.xlarge}\n        `}\n      >\n        Links\n      </div>\n      {Array.isArray(value) && value.map((link, index) => (\n        <div className=\"flex\" key={index}>\n          <RenderLink value={link} type={type} />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default RenderGroupLink;\n"],"names":[],"mappings":";;;;AACA;AACA;;;;AAEA,MAAM,kBAA2C,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE;IAC/D,MAAM,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,8HAAA,CAAA,WAAQ,AAAD;IAEjC,qBACE,8OAAC;QAAI,WAAW,CAAC;;IAEjB,CAAC;;0BACC,8OAAC;gBACC,WAAW,CAAC;;UAEV,EAAE,cAAc,MAAM,CAAC,IAAI,CAAC;UAC5B,EAAE,cAAc,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC;QAC7C,CAAC;0BACF;;;;;;YAGA,MAAM,OAAO,CAAC,UAAU,MAAM,GAAG,CAAC,CAAC,MAAM,sBACxC,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC,iJAAA,CAAA,UAAU;wBAAC,OAAO;wBAAM,MAAM;;;;;;mBADN;;;;;;;;;;;AAMnC;uCAEe","debugId":null}},
    {"offset": {"line": 859, "column": 0}, "map": {"version":3,"sources":["file:///Users/elioglima/projects/neocoode/sdk-cortex/plugins/luma/src/components/renderMessage/renderImageUrl.tsx"],"sourcesContent":["/* eslint-disable @next/next/no-img-element */\nimport \"keen-slider/keen-slider.min.css\";\nimport { useKeenSlider } from \"keen-slider/react\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { IResponseChat } from \"@/interface/chats\";\n\nconst RenderImageUrl: React.FC<IResponseChat> = ({ value }) => {\n  const imageUrls = typeof value === 'string' ? JSON.parse(value) : value;\n  const [loaded, setLoaded] = useState(false);\n  const timer = useRef<NodeJS.Timeout | null>(null);\n  const [selectedImage, setSelectedImage] = useState<string | null>(null);\n  const [currentImageIndex, setCurrentImageIndex] = useState<number>(0);\n\n  const perView = imageUrls && imageUrls.length > 6 ? 6 : imageUrls && imageUrls.length > 3 ? 4 : 3;\n\n  const [sliderRef, slider] = useKeenSlider<HTMLDivElement>({\n    initial: 0,\n    slides: {\n      perView,\n      spacing: 15,\n    },\n    created() {\n      setLoaded(true);\n    },\n  });\n\n  useEffect(() => {\n    if (!slider) return;\n\n    const autoplay = () => {\n      timer.current = setInterval(() => {\n        if (slider.current) {\n          slider.current.next();\n        }\n      }, 3000);\n    };\n\n    autoplay();\n\n    return () => {\n      if (timer.current) clearInterval(timer.current);\n    };\n  }, [slider]);\n\n  const handleKeyDown = (e: KeyboardEvent) => {\n    if (e.key === 'Escape' || e.key === 'Enter') {\n      setSelectedImage(null);\n    } else if (e.key === 'ArrowLeft') {\n      handlePrevImage();\n    } else if (e.key === 'ArrowRight') {\n      handleNextImage();\n    }\n  };\n\n  const handlePrevImage = () => {\n    const newIndex = currentImageIndex > 0 ? currentImageIndex - 1 : imageUrls.length - 1;\n    setCurrentImageIndex(newIndex);\n    setSelectedImage(imageUrls[newIndex]);\n  };\n\n  const handleNextImage = () => {\n    const newIndex = currentImageIndex < imageUrls.length - 1 ? currentImageIndex + 1 : 0;\n    setCurrentImageIndex(newIndex);\n    setSelectedImage(imageUrls[newIndex]);\n  };\n\n  useEffect(() => {\n    if (selectedImage) {\n      window.addEventListener('keydown', handleKeyDown);\n      return () => window.removeEventListener('keydown', handleKeyDown);\n    }\n  }, [selectedImage, currentImageIndex]);\n\n  const handleImageClick = (url: string, index: number) => {\n    setCurrentImageIndex(index);\n    setSelectedImage(url);\n  };\n\n  if (!Array.isArray(imageUrls) || !imageUrls.length) {\n    return null;\n  }\n\n  return (\n    <>\n      <div className=\"relative w-full max-w-6xl mx-auto pb-6 group\">\n        <div\n          ref={sliderRef}\n          className=\"keen-slider overflow-hidden rounded-lg\"\n          onMouseEnter={() => timer.current && clearInterval(timer.current)}\n          onMouseLeave={() => {\n            timer.current = setInterval(() => {\n              if (slider?.current) {\n                slider.current.next();\n              }\n            }, 3000);\n          }}\n        >\n          {imageUrls.map((url: string, index: number) => (\n            <div\n              key={index}\n              className=\"keen-slider__slide flex justify-center items-center\"\n            >\n              <div className=\"w-full aspect-[17/7] overflow-hidden rounded-md shadow-md\">\n                <img\n                  src={url}\n                  alt={`Imagem ${index + 1}`}\n                  className=\"w-full h-full object-cover cursor-pointer hover:opacity-90 transition\"\n                  onClick={() => handleImageClick(url, index)}\n                />\n              </div>\n            </div>\n          ))}\n        </div>\n\n        {loaded && slider && (\n          <>\n            <button\n              onClick={() => slider.current?.prev()}\n              className=\"absolute left-0 top-1/2 transform -translate-y-1/2 bg-black bg-opacity-30 text-white p-2 rounded-full hover:bg-opacity-50 transition hidden group-hover:block\"\n            >\n              ‹\n            </button>\n            <button\n              onClick={() => slider.current?.next()}\n              className=\"absolute right-0 top-1/2 transform -translate-y-1/2 bg-black bg-opacity-30 text-white p-2 rounded-full hover:bg-opacity-50 transition hidden group-hover:block\"\n            >\n              ›\n            </button>\n          </>\n        )}\n      </div>\n\n      {/* Modal de Imagem */}\n      {selectedImage && (\n        <div \n          className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\"\n          onClick={() => setSelectedImage(null)}\n        >\n          <div className=\"relative max-w-[90vw] max-h-[90vh]\">\n            <img\n              src={selectedImage}\n              alt=\"Imagem ampliada\"\n              className=\"max-w-full max-h-[90vh] object-contain\"\n            />\n            <button\n              onClick={() => setSelectedImage(null)}\n              className=\"absolute top-4 right-4 text-white bg-black bg-opacity-50 rounded-full p-2 hover:bg-opacity-75\"\n            >\n              ✕\n            </button>\n            <button\n              onClick={(e) => {\n                e.stopPropagation();\n                handlePrevImage();\n              }}\n              className=\"absolute left-4 top-1/2 transform -translate-y-1/2 text-white bg-black bg-opacity-50 rounded-full p-2 hover:bg-opacity-75\"\n            >\n              ‹\n            </button>\n            <button\n              onClick={(e) => {\n                e.stopPropagation();\n                handleNextImage();\n              }}\n              className=\"absolute right-4 top-1/2 transform -translate-y-1/2 text-white bg-black bg-opacity-50 rounded-full p-2 hover:bg-opacity-75\"\n            >\n              ›\n            </button>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default RenderImageUrl;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1079, "column": 0}, "map": {"version":3,"sources":["file:///Users/elioglima/projects/neocoode/sdk-cortex/plugins/luma/src/components/renderMessage/renderMessage.tsx"],"sourcesContent":["import { IResponseChat } from \"@/interface/chats\";\nimport { useTheme } from \"@/themes/themeContext\";\n\nconst RenderMessage: React.FC<IResponseChat> = ({ value, key }) => {\n  const { themeSelected } = useTheme();\n\n  return (\n    <div \n      key={key} \n      className={`\n        flex flex-wrap py-2 mb-2 text-justify \n        ${themeSelected.colors.text}\n        ${themeSelected.typography.fontSize.large}\n      `}>\n      {value}\n    </div>\n  );\n};\n\nexport default RenderMessage;\n"],"names":[],"mappings":";;;;AACA;;;AAEA,MAAM,gBAAyC,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE;IAC5D,MAAM,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,8HAAA,CAAA,WAAQ,AAAD;IAEjC,qBACE,8OAAC;QAEC,WAAW,CAAC;;QAEV,EAAE,cAAc,MAAM,CAAC,IAAI,CAAC;QAC5B,EAAE,cAAc,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC;MAC5C,CAAC;kBACA;OANI;;;;;AASX;uCAEe","debugId":null}},
    {"offset": {"line": 1108, "column": 0}, "map": {"version":3,"sources":["file:///Users/elioglima/projects/neocoode/sdk-cortex/plugins/luma/src/interface/tableSchema.ts"],"sourcesContent":["export enum ETableType {\n    error = 'error',\n    schema = 'schema',\n}\n\nexport interface ITableSchema {\n    field: string;\n    type: string;\n    example: string | number | object;\n    description: string;\n    source: string;\n}\n\nexport interface ITable {\n    type: ETableType;\n    fields: Array<ITableSchema>;\n}\n"],"names":[],"mappings":";;;AAAO,IAAA,AAAK,oCAAA;;;WAAA","debugId":null}},
    {"offset": {"line": 1122, "column": 0}, "map": {"version":3,"sources":["file:///Users/elioglima/projects/neocoode/sdk-cortex/plugins/luma/src/components/renderMessage/renderTable/components/renderTableSchema/components/TableHeader.tsx"],"sourcesContent":["/**\n * @file TableHeader.tsx\n * @description Componente responsável por renderizar o cabeçalho da tabela de schema.\n * Importa as interfaces e hooks necessários para a renderização do cabeçalho.\n */\n\nimport { ITableSchema } from \"@/interface/tableSchema\";\nimport { useTheme } from \"@/themes/themeContext\";\n\nconst TableHeader: React.FC<{ fields: ITableSchema[] }> = ({ fields }) => {\n    const { themeSelected } = useTheme();\n    \n    return (\n      <thead>\n        <tr className={themeSelected.colors.backgroundTableHeader}>\n          {fields[0] && Object.keys(fields[0]).map((key) => (\n            <th\n              key={key}\n              className={`\n                px-4 py-2 border-b text-left uppercase tracking-wider\n                ${themeSelected.typography.fontSize.small}\n                ${themeSelected.colors.text}\n                ${themeSelected.borders.default}\n              `}\n            >\n              {key.charAt(0).toUpperCase() + key.slice(1)}\n            </th>\n          ))}\n        </tr>\n      </thead>\n    );\n  };\n\nexport default TableHeader;"],"names":[],"mappings":"AAAA;;;;CAIC;;;;AAGD;;;AAEA,MAAM,cAAoD,CAAC,EAAE,MAAM,EAAE;IACjE,MAAM,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,8HAAA,CAAA,WAAQ,AAAD;IAEjC,qBACE,8OAAC;kBACC,cAAA,8OAAC;YAAG,WAAW,cAAc,MAAM,CAAC,qBAAqB;sBACtD,MAAM,CAAC,EAAE,IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,oBACxC,8OAAC;oBAEC,WAAW,CAAC;;gBAEV,EAAE,cAAc,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC;gBAC1C,EAAE,cAAc,MAAM,CAAC,IAAI,CAAC;gBAC5B,EAAE,cAAc,OAAO,CAAC,OAAO,CAAC;cAClC,CAAC;8BAEA,IAAI,MAAM,CAAC,GAAG,WAAW,KAAK,IAAI,KAAK,CAAC;mBARpC;;;;;;;;;;;;;;;AAcjB;uCAEa","debugId":null}},
    {"offset": {"line": 1169, "column": 0}, "map": {"version":3,"sources":["file:///Users/elioglima/projects/neocoode/sdk-cortex/plugins/luma/src/components/renderMessage/renderTable/components/renderTableSchema/components/TableCell.tsx"],"sourcesContent":["/**\n * @file TableCell.tsx\n * @description Componente responsável por renderizar uma célula da tabela de schema.\n * Recebe o conteúdo, largura e tema selecionado para exibir as informações formatadas.\n * Suporta tanto conteúdo textual quanto objetos JSON.\n */\n\nconst TableCell: React.FC<{ \n    content: string | object,\n    width: string,\n    themeSelected: any \n  }> = ({ content, width, themeSelected }) => (\n    <td className={`\n      ${width} px-4 py-2 border-b break-words\n      ${themeSelected.borders.default}\n      ${themeSelected.typography.fontSize.small}\n      ${themeSelected.colors.text}\n    `}>\n      {typeof content === 'object' ? JSON.stringify(content) : content}\n    </td>\n  );\n\nexport default TableCell;"],"names":[],"mappings":"AAAA;;;;;CAKC;;;;;AAED,MAAM,YAIC,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,aAAa,EAAE,iBACrC,8OAAC;QAAG,WAAW,CAAC;MACd,EAAE,MAAM;MACR,EAAE,cAAc,OAAO,CAAC,OAAO,CAAC;MAChC,EAAE,cAAc,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC;MAC1C,EAAE,cAAc,MAAM,CAAC,IAAI,CAAC;IAC9B,CAAC;kBACE,OAAO,YAAY,WAAW,KAAK,SAAS,CAAC,WAAW;;;;;;uCAIhD","debugId":null}},
    {"offset": {"line": 1199, "column": 0}, "map": {"version":3,"sources":["file:///Users/elioglima/projects/neocoode/sdk-cortex/plugins/luma/src/components/renderMessage/renderTable/components/renderTableSchema/components/TableRow.tsx"],"sourcesContent":["/**\n * @file TableRow.tsx\n * @description Componente responsável por renderizar uma linha da tabela de schema.\n * Recebe os dados do campo, índice e tema selecionado para exibir as informações formatadas.\n */\n\nimport { ITableSchema } from \"@/interface/tableSchema\";\nimport TableCell from \"./TableCell\";\n\nconst TableRow: React.FC<{ \n    field: ITableSchema,\n    index: number,\n    themeSelected: any \n  }> = ({ field, index, themeSelected }) => (\n    <tr key={index} className={themeSelected.colors.backgroundTable}>\n      <TableCell content={String(field.field)} width=\"w-[20%]\" themeSelected={themeSelected} />\n      <TableCell content={String(field.type)} width=\"w-[20%]\" themeSelected={themeSelected} />\n      <TableCell content={String(field.example)} width=\"w-[20%]\" themeSelected={themeSelected} />\n      <TableCell content={String(field.description)} width=\"w-[25%]\" themeSelected={themeSelected} />\n      <TableCell content={String(field.source)} width=\"w-[15%]\" themeSelected={themeSelected} />\n    </tr>\n  );\n\n\nexport default TableRow;"],"names":[],"mappings":"AAAA;;;;CAIC;;;;AAGD;;;AAEA,MAAM,WAIC,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,aAAa,EAAE,iBACnC,8OAAC;QAAe,WAAW,cAAc,MAAM,CAAC,eAAe;;0BAC7D,8OAAC,gNAAA,CAAA,UAAS;gBAAC,SAAS,OAAO,MAAM,KAAK;gBAAG,OAAM;gBAAU,eAAe;;;;;;0BACxE,8OAAC,gNAAA,CAAA,UAAS;gBAAC,SAAS,OAAO,MAAM,IAAI;gBAAG,OAAM;gBAAU,eAAe;;;;;;0BACvE,8OAAC,gNAAA,CAAA,UAAS;gBAAC,SAAS,OAAO,MAAM,OAAO;gBAAG,OAAM;gBAAU,eAAe;;;;;;0BAC1E,8OAAC,gNAAA,CAAA,UAAS;gBAAC,SAAS,OAAO,MAAM,WAAW;gBAAG,OAAM;gBAAU,eAAe;;;;;;0BAC9E,8OAAC,gNAAA,CAAA,UAAS;gBAAC,SAAS,OAAO,MAAM,MAAM;gBAAG,OAAM;gBAAU,eAAe;;;;;;;OALlE;;;;;uCAUE","debugId":null}},
    {"offset": {"line": 1271, "column": 0}, "map": {"version":3,"sources":["file:///Users/elioglima/projects/neocoode/sdk-cortex/plugins/luma/src/components/renderMessage/renderTable/components/renderTableSchema/renderTableSchema.tsx"],"sourcesContent":["/**\n * @file renderTableSchema.tsx\n * @description Componente responsável por renderizar uma tabela de schema com campos personalizados.\n * Exibe informações como campo, tipo, exemplo, descrição e fonte em um formato tabular.\n * Utiliza temas dinâmicos para estilização e suporta dados de exemplo em formato JSON.\n */\n\nimport { ITableSchema } from \"@/interface/tableSchema\";\nimport { useTheme } from \"@/themes/themeContext\";\nimport TableHeader from \"./components/TableHeader\";\nimport TableRow from \"./components/TableRow\";\n\n// Componente principal que renderiza a tabela de schema\n// Recebe os campos e uma chave única como props\n// Utiliza o hook useTheme para acessar o tema atual\nconst RenderTableSchema: React.FC<{ fields: ITableSchema[], key: string }> = ({ fields, key }) => {\n  const { themeSelected } = useTheme();\n\n  return (\n    // Container com scroll horizontal para tabelas grandes\n    <div key={key} className=\"overflow-x-auto\">\n      {/* Tabela principal com estilos dinâmicos do tema */}\n      <table className={`\n        w-full\n        ${themeSelected.colors.backgroundTable}\n        ${themeSelected.borderRadius.xxlarge}\n      `}>\n        {/* Cabeçalho da tabela */}\n        <TableHeader fields={fields} />\n        <tbody>\n          {/* Mapeia cada campo para uma linha da tabela */}\n          {fields.map((field, index) => (\n            <TableRow \n              key={index}\n              field={field}\n              index={index}\n              themeSelected={themeSelected}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default RenderTableSchema;\n"],"names":[],"mappings":"AAAA;;;;;CAKC;;;;AAGD;AACA;AACA;;;;;AAEA,wDAAwD;AACxD,gDAAgD;AAChD,oDAAoD;AACpD,MAAM,oBAAuE,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE;IAC3F,MAAM,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,8HAAA,CAAA,WAAQ,AAAD;IAEjC,OACE,uDAAuD;kBACvD,8OAAC;QAAc,WAAU;kBAEvB,cAAA,8OAAC;YAAM,WAAW,CAAC;;QAEjB,EAAE,cAAc,MAAM,CAAC,eAAe,CAAC;QACvC,EAAE,cAAc,YAAY,CAAC,OAAO,CAAC;MACvC,CAAC;;8BAEC,8OAAC,kNAAA,CAAA,UAAW;oBAAC,QAAQ;;;;;;8BACrB,8OAAC;8BAEE,OAAO,GAAG,CAAC,CAAC,OAAO,sBAClB,8OAAC,+MAAA,CAAA,UAAQ;4BAEP,OAAO;4BACP,OAAO;4BACP,eAAe;2BAHV;;;;;;;;;;;;;;;;OAbL;;;;;AAuBd;uCAEe","debugId":null}},
    {"offset": {"line": 1343, "column": 0}, "map": {"version":3,"sources":["file:///Users/elioglima/projects/neocoode/sdk-cortex/plugins/luma/src/components/renderMessage/renderTable/components/renderTableContent.tsx"],"sourcesContent":["/**\n * @file renderTableContent.tsx\n * @description Componente responsável por renderizar o conteúdo da tabela baseado no tipo.\n * Faz o parse do JSON recebido e renderiza o componente apropriado de acordo com o tipo da tabela.\n * Atualmente suporta apenas tabelas do tipo schema.\n */\n\nimport { ETableType, ITable } from \"@/interface/tableSchema\";\nimport { useEffect, useMemo } from \"react\";\nimport RenderTableSchema from \"./renderTableSchema/renderTableSchema\";\n\ninterface IProps {\n  value: string;\n  key: string;\n  setIsTableType: (isTableType: ETableType) => void;\n}\n\nexport const RenderTableContent: React.FC<IProps> = ({ value, key, setIsTableType }) => {\n  // Faz o parse do JSON apenas uma vez por valor\n  const data = useMemo(() => {\n    try {\n      return JSON.parse(value as string) as ITable;\n    } catch {\n      return undefined;\n    }\n  }, [value]);\n\n  // Atualiza o tipo da tabela quando data mudar\n  useEffect(() => {\n    if (data) {\n      setIsTableType(data.type);\n    }\n  }, [data, setIsTableType]);\n\n  if (!data) return <></>;\n\n  switch (data.type) {\n    case ETableType.schema:\n      return <RenderTableSchema key={key} fields={data.fields} />;\n    default:\n      return <></>;\n  }\n};\n"],"names":[],"mappings":"AAAA;;;;;CAKC;;;;AAED;AACA;AACA;;;;;AAQO,MAAM,qBAAuC,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE,cAAc,EAAE;IACjF,+CAA+C;IAC/C,MAAM,OAAO,CAAA,GAAA,qMAAA,CAAA,UAAO,AAAD,EAAE;QACnB,IAAI;YACF,OAAO,KAAK,KAAK,CAAC;QACpB,EAAE,OAAM;YACN,OAAO;QACT;IACF,GAAG;QAAC;KAAM;IAEV,8CAA8C;IAC9C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,MAAM;YACR,eAAe,KAAK,IAAI;QAC1B;IACF,GAAG;QAAC;QAAM;KAAe;IAEzB,IAAI,CAAC,MAAM,qBAAO;IAElB,OAAQ,KAAK,IAAI;QACf,KAAK,+HAAA,CAAA,aAAU,CAAC,MAAM;YACpB,qBAAO,8OAAC,0MAAA,CAAA,UAAiB;gBAAW,QAAQ,KAAK,MAAM;eAAxB;;;;;QACjC;YACE,qBAAO;IACX;AACF","debugId":null}},
    {"offset": {"line": 1399, "column": 0}, "map": {"version":3,"sources":["file:///Users/elioglima/projects/neocoode/sdk-cortex/plugins/luma/src/utils/strToITable.ts"],"sourcesContent":["/**\n * @file strToITable.ts\n * @description Este arquivo contém uma função utilitária que converte uma string JSON em um objeto ITable.\n * A função faz a validação do tipo de tabela e retorna um objeto ITable com os campos apropriados.\n * Se houver erro na conversão ou o tipo não for schema, retorna um objeto de erro.\n */\n\nimport { ETableType, ITable } from \"@/interface/tableSchema\";\n\nexport const strToITable = (value: string): ITable => {\n    try {\n        const data = JSON.parse(value) as ITable;\n        if (data.type === ETableType.schema) {\n            return data;\n        }\n\n        return {\n            type: ETableType.error,\n            fields: []\n        }\n    } catch (error) {\n        return {\n            type: ETableType.error,\n            fields: []\n        }\n    }\n};\n"],"names":[],"mappings":"AAAA;;;;;CAKC;;;AAED;;AAEO,MAAM,cAAc,CAAC;IACxB,IAAI;QACA,MAAM,OAAO,KAAK,KAAK,CAAC;QACxB,IAAI,KAAK,IAAI,KAAK,+HAAA,CAAA,aAAU,CAAC,MAAM,EAAE;YACjC,OAAO;QACX;QAEA,OAAO;YACH,MAAM,+HAAA,CAAA,aAAU,CAAC,KAAK;YACtB,QAAQ,EAAE;QACd;IACJ,EAAE,OAAO,OAAO;QACZ,OAAO;YACH,MAAM,+HAAA,CAAA,aAAU,CAAC,KAAK;YACtB,QAAQ,EAAE;QACd;IACJ;AACJ","debugId":null}},
    {"offset": {"line": 1432, "column": 0}, "map": {"version":3,"sources":["file:///Users/elioglima/projects/neocoode/sdk-cortex/plugins/luma/src/components/renderMessage/renderTable/modules/downloadTableSchema.ts"],"sourcesContent":["/**\n * @file downloadTableSchema.ts\n * @description Este módulo contém a função responsável por baixar o schema da tabela em formato CSV.\n * A função converte os dados da tabela em um formato CSV, cria um arquivo para download\n * e gerencia as mensagens de feedback para o usuário através de toasts.\n */\n\nimport { ETableType } from \"@/interface/tableSchema\";\nimport { showToast } from \"@/modules/toast/slice\";\nimport { strToITable } from \"@/utils/strToITable\";\n\ninterface IDownloadTableSchema {\n  dispatch: any;\n}\n\nexport const downloadTableSchema = (value: string, { dispatch }: IDownloadTableSchema) => {\n  if (!dispatch) return;\n\n  try {\n    const data = strToITable(value);\n    if (data.type == ETableType.error) {\n      dispatch(showToast({ message: 'Não foi possível baixar!', type: 'error' }));\n      return;\n    }\n\n    if (!data.fields || !Array.isArray(data.fields)) {\n      dispatch(showToast({ message: 'Não foi possível baixar!', type: 'error' }));\n      return;\n    }\n\n    const csvRows = [];\n    // Cabeçalho dinâmico\n    const header = Object.keys(data.fields[0] || {}).map(key => key.charAt(0).toUpperCase() + key.slice(1));\n    csvRows.push(header.join(\",\"));\n    // Linhas\n    data.fields.forEach(field => {\n      csvRows.push(header.map(key => {\n        const value = (field as unknown as Record<string, unknown>)[key.toLowerCase()];\n        if (typeof value === 'object') return `\"${JSON.stringify(value)}\"`;\n        return `\"${value}\"`;\n      }).join(\",\"));\n    });\n\n    const csvContent = csvRows.join(\"\\n\");\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.setAttribute('download', 'tableSchema.csv');\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n    dispatch(showToast({ message: 'Download efetuado com sucesso!', type: 'success' }));\n  } catch (error) {\n    dispatch(showToast({ message: 'Não foi possível baixar!', type: 'error' }));\n  }\n}"],"names":[],"mappings":"AAAA;;;;;CAKC;;;AAED;AACA;AACA;;;;AAMO,MAAM,sBAAsB,CAAC,OAAe,EAAE,QAAQ,EAAwB;IACnF,IAAI,CAAC,UAAU;IAEf,IAAI;QACF,MAAM,OAAO,CAAA,GAAA,2HAAA,CAAA,cAAW,AAAD,EAAE;QACzB,IAAI,KAAK,IAAI,IAAI,+HAAA,CAAA,aAAU,CAAC,KAAK,EAAE;YACjC,SAAS,CAAA,GAAA,gIAAA,CAAA,YAAS,AAAD,EAAE;gBAAE,SAAS;gBAA4B,MAAM;YAAQ;YACxE;QACF;QAEA,IAAI,CAAC,KAAK,MAAM,IAAI,CAAC,MAAM,OAAO,CAAC,KAAK,MAAM,GAAG;YAC/C,SAAS,CAAA,GAAA,gIAAA,CAAA,YAAS,AAAD,EAAE;gBAAE,SAAS;gBAA4B,MAAM;YAAQ;YACxE;QACF;QAEA,MAAM,UAAU,EAAE;QAClB,qBAAqB;QACrB,MAAM,SAAS,OAAO,IAAI,CAAC,KAAK,MAAM,CAAC,EAAE,IAAI,CAAC,GAAG,GAAG,CAAC,CAAA,MAAO,IAAI,MAAM,CAAC,GAAG,WAAW,KAAK,IAAI,KAAK,CAAC;QACpG,QAAQ,IAAI,CAAC,OAAO,IAAI,CAAC;QACzB,SAAS;QACT,KAAK,MAAM,CAAC,OAAO,CAAC,CAAA;YAClB,QAAQ,IAAI,CAAC,OAAO,GAAG,CAAC,CAAA;gBACtB,MAAM,QAAQ,AAAC,KAA4C,CAAC,IAAI,WAAW,GAAG;gBAC9E,IAAI,OAAO,UAAU,UAAU,OAAO,CAAC,CAAC,EAAE,KAAK,SAAS,CAAC,OAAO,CAAC,CAAC;gBAClE,OAAO,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;YACrB,GAAG,IAAI,CAAC;QACV;QAEA,MAAM,aAAa,QAAQ,IAAI,CAAC;QAChC,MAAM,OAAO,IAAI,KAAK;YAAC;SAAW,EAAE;YAAE,MAAM;QAA0B;QACtE,MAAM,MAAM,IAAI,eAAe,CAAC;QAChC,MAAM,OAAO,SAAS,aAAa,CAAC;QACpC,KAAK,IAAI,GAAG;QACZ,KAAK,YAAY,CAAC,YAAY;QAC9B,SAAS,IAAI,CAAC,WAAW,CAAC;QAC1B,KAAK,KAAK;QACV,SAAS,IAAI,CAAC,WAAW,CAAC;QAC1B,IAAI,eAAe,CAAC;QACpB,SAAS,CAAA,GAAA,gIAAA,CAAA,YAAS,AAAD,EAAE;YAAE,SAAS;YAAkC,MAAM;QAAU;IAClF,EAAE,OAAO,OAAO;QACd,SAAS,CAAA,GAAA,gIAAA,CAAA,YAAS,AAAD,EAAE;YAAE,SAAS;YAA4B,MAAM;QAAQ;IAC1E;AACF","debugId":null}},
    {"offset": {"line": 1507, "column": 0}, "map": {"version":3,"sources":["file:///Users/elioglima/projects/neocoode/sdk-cortex/plugins/luma/src/components/renderMessage/renderTable/renderTable.tsx"],"sourcesContent":["/**\n * @file renderTable.tsx\n * @description Componente responsável por renderizar uma tabela com funcionalidade de download.\n * Permite visualizar dados em formato de tabela e baixar o schema em formato CSV.\n * Implementa proteção contra múltiplos cliques no botão de download.\n */\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { IResponseChat } from \"@/interface/chats\";\nimport { ETableType } from \"@/interface/tableSchema\";\nimport { useTheme } from \"@/themes/themeContext\";\nimport { Download } from 'lucide-react';\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport CustomCard from \"../../customCard\";\nimport { RenderTableContent } from \"./components/renderTableContent\";\nimport { downloadTableSchema } from \"./modules/downloadTableSchema\";\n\nconst RenderTable: React.FC<IResponseChat> = ({ value, key }) => {\n  const { themeSelected } = useTheme();\n  const dispatch = useDispatch();\n  const [isTableType, setIsTableType] = useState<ETableType | undefined>(undefined);\n\n  let lastClickTime = 0;\n  return <div className=\"flex flex-col my-4 w-full\">\n    <CustomCard\n      title=\"Tabela\"\n      rightIcon={<div>\n        <Download\n          size={20}\n          className={`\n            cursor-pointer\n          ${themeSelected.colors.text} \n        `}\n        onClick={() => {\n          const now = Date.now();\n          if (now - lastClickTime < 3000) return; // Previne múltiplos cliques em 1 segundo\n          lastClickTime = now;\n          if (isTableType === ETableType.schema && typeof value === 'string') {\n            downloadTableSchema(value as string, { dispatch});\n          }\n        }}\n        />\n      </div>}\n    >\n      <RenderTableContent value={value as string} key={key} setIsTableType={setIsTableType} />\n    </CustomCard>\n\n  </div>;\n};\n\nexport default RenderTable;\n"],"names":[],"mappings":"AAAA;;;;;CAKC,GAED,oDAAoD,GACpD,qDAAqD;;;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AAEA,MAAM,cAAuC,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE;IAC1D,MAAM,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,8HAAA,CAAA,WAAQ,AAAD;IACjC,MAAM,WAAW,CAAA,GAAA,yJAAA,CAAA,cAAW,AAAD;IAC3B,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAA0B;IAEvE,IAAI,gBAAgB;IACpB,qBAAO,8OAAC;QAAI,WAAU;kBACpB,cAAA,8OAAC,gIAAA,CAAA,UAAU;YACT,OAAM;YACN,yBAAW,8OAAC;0BACV,cAAA,8OAAC,0MAAA,CAAA,WAAQ;oBACP,MAAM;oBACN,WAAW,CAAC;;UAEZ,EAAE,cAAc,MAAM,CAAC,IAAI,CAAC;QAC9B,CAAC;oBACD,SAAS;wBACP,MAAM,MAAM,KAAK,GAAG;wBACpB,IAAI,MAAM,gBAAgB,MAAM,QAAQ,yCAAyC;wBACjF,gBAAgB;wBAChB,IAAI,gBAAgB,+HAAA,CAAA,aAAU,CAAC,MAAM,IAAI,OAAO,UAAU,UAAU;4BAClE,CAAA,GAAA,mLAAA,CAAA,sBAAmB,AAAD,EAAE,OAAiB;gCAAE;4BAAQ;wBACjD;oBACF;;;;;;;;;;;sBAIF,cAAA,8OAAC,sLAAA,CAAA,qBAAkB;gBAAC,OAAO;gBAA2B,gBAAgB;eAArB;;;;;;;;;;;;;;;AAIvD;uCAEe","debugId":null}},
    {"offset": {"line": 1595, "column": 0}, "map": {"version":3,"sources":["file:///Users/elioglima/projects/neocoode/sdk-cortex/plugins/luma/src/components/renderMessage/renderText.tsx"],"sourcesContent":["import { IResponseChat } from \"@/interface/chats\";\nimport { useTheme } from \"@/themes/themeContext\";\n\nconst RenderText: React.FC<IResponseChat> = ({ value, key }) => {\n  const { themeSelected } = useTheme();\n\n  return (\n    <div \n      key={key} \n      className={`\n        flex flex-wrap py-2 text-justify \n        ${themeSelected.colors.text}\n        ${themeSelected.typography.fontSize.large}\n      `}\n    >\n      {value}\n    </div>\n  );\n};\n\nexport default RenderText;\n"],"names":[],"mappings":";;;;AACA;;;AAEA,MAAM,aAAsC,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE;IACzD,MAAM,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,8HAAA,CAAA,WAAQ,AAAD;IAEjC,qBACE,8OAAC;QAEC,WAAW,CAAC;;QAEV,EAAE,cAAc,MAAM,CAAC,IAAI,CAAC;QAC5B,EAAE,cAAc,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC;MAC5C,CAAC;kBAEA;OAPI;;;;;AAUX;uCAEe","debugId":null}},
    {"offset": {"line": 1624, "column": 0}, "map": {"version":3,"sources":["file:///Users/elioglima/projects/neocoode/sdk-cortex/plugins/luma/src/components/renderMessage/renderTitle.tsx"],"sourcesContent":["import { IResponseChat } from \"@/interface/chats\";\nimport { useTheme } from \"@/themes/themeContext\";\n\nconst RenderTitle: React.FC<IResponseChat> = ({ value, key }) => {\n  const { themeSelected } = useTheme();\n\n  return (\n    <div \n      key={key} \n      className={`\n        flex flex-wrap text-2xl font-bold py-2 pt-5\n        ${themeSelected.colors.text}\n        ${themeSelected.typography.fontSize.xxlarge}\n      `}>\n      {value}\n    </div>\n  );\n};\n\nexport default RenderTitle;\n"],"names":[],"mappings":";;;;AACA;;;AAEA,MAAM,cAAuC,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE;IAC1D,MAAM,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,8HAAA,CAAA,WAAQ,AAAD;IAEjC,qBACE,8OAAC;QAEC,WAAW,CAAC;;QAEV,EAAE,cAAc,MAAM,CAAC,IAAI,CAAC;QAC5B,EAAE,cAAc,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC;MAC9C,CAAC;kBACA;OANI;;;;;AASX;uCAEe","debugId":null}},
    {"offset": {"line": 1653, "column": 0}, "map": {"version":3,"sources":["file:///Users/elioglima/projects/neocoode/sdk-cortex/plugins/luma/src/components/renderMessage/renderUser.tsx"],"sourcesContent":["import { IResponseChat } from \"@/interface/chats\";\nimport { useTheme } from \"@/themes/themeContext\";\nimport { Repeat } from 'lucide-react';\n\nconst RenderUser: React.FC<IResponseChat> = ({ key, value, onReplay }) => {\n  const { themeSelected } = useTheme();\n\n  return (\n    <div\n      key={key}\n      className={`\n        flex flex-wrap text-justify items-center flex-row justify-between mt-1 mb-2 py-2 pr-3  \n        ${themeSelected.colors.backgroundTertiary} \n        ${themeSelected.borderRadius.xxlarge} \n      `}\n    >\n      <div\n        className={`\n          pr-1 pl-1 mx-2\n          ${themeSelected.typography.fontSize.medium} \n          ${themeSelected.colors.text} \n        `}\n      >\n        {value}\n      </div>\n      <Repeat \n        size={20}\n        className={`\n          cursor-pointer\n          ${themeSelected.colors.text} \n        `}\n        onClick={onReplay ? () => onReplay(value) : undefined}\n      />\n    </div>\n  );\n};\n\nexport default RenderUser;\n"],"names":[],"mappings":";;;;AACA;AACA;;;;AAEA,MAAM,aAAsC,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,QAAQ,EAAE;IACnE,MAAM,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,8HAAA,CAAA,WAAQ,AAAD;IAEjC,qBACE,8OAAC;QAEC,WAAW,CAAC;;QAEV,EAAE,cAAc,MAAM,CAAC,kBAAkB,CAAC;QAC1C,EAAE,cAAc,YAAY,CAAC,OAAO,CAAC;MACvC,CAAC;;0BAED,8OAAC;gBACC,WAAW,CAAC;;UAEV,EAAE,cAAc,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC;UAC3C,EAAE,cAAc,MAAM,CAAC,IAAI,CAAC;QAC9B,CAAC;0BAEA;;;;;;0BAEH,8OAAC,sMAAA,CAAA,SAAM;gBACL,MAAM;gBACN,WAAW,CAAC;;UAEV,EAAE,cAAc,MAAM,CAAC,IAAI,CAAC;QAC9B,CAAC;gBACD,SAAS,WAAW,IAAM,SAAS,SAAS;;;;;;;OAtBzC;;;;;AA0BX;uCAEe","debugId":null}},
    {"offset": {"line": 1709, "column": 0}, "map": {"version":3,"sources":["file:///Users/elioglima/projects/neocoode/sdk-cortex/plugins/luma/src/components/renderMessage/index.tsx"],"sourcesContent":["import { EMessageType, IResponseChat } from \"@/interface/chats\";\nimport RenderCode from \"./renderCode\";\nimport RenderDivider from \"./renderDivider\";\nimport RenderGroupLink from \"./renderGroupLink\";\nimport RenderImageUrl from \"./renderImageUrl\";\nimport RenderLink from \"./renderLink\";\nimport RenderMessage from \"./renderMessage\";\nimport RenderTable from \"./renderTable/renderTable\";\nimport RenderText from \"./renderText\";\nimport RenderTitle from \"./renderTitle\";\nimport RenderUser from \"./renderUser\";\n\n\nconst DisplaySentenseUser: React.FC<IResponseChat> = (data) => {\n  switch (data.type) {\n    case EMessageType.user:\n      return <RenderUser {...data} />;\n    case EMessageType.message:\n      return <RenderMessage {...data} />;\n    case EMessageType.title:\n      return <RenderTitle {...data} />;\n    case EMessageType.link:\n      return <RenderLink {...data} />;\n    case EMessageType.groupLink:\n      return <RenderGroupLink {...data} />;\n    case EMessageType.table:\n      return <RenderTable {...data} />;\n    case EMessageType.text:\n      return <RenderText {...data} />;\n    case EMessageType.code:\n      return <RenderCode {...data} />;\n    case EMessageType.divider:\n      return <RenderDivider />;\n    case EMessageType.imageUrl:\n      return <RenderImageUrl {...data} />;\n  }\n};\n\nexport default DisplaySentenseUser;\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAGA,MAAM,sBAA+C,CAAC;IACpD,OAAQ,KAAK,IAAI;QACf,KAAK,0HAAA,CAAA,eAAY,CAAC,IAAI;YACpB,qBAAO,8OAAC,iJAAA,CAAA,UAAU;gBAAE,GAAG,IAAI;;;;;;QAC7B,KAAK,0HAAA,CAAA,eAAY,CAAC,OAAO;YACvB,qBAAO,8OAAC,oJAAA,CAAA,UAAa;gBAAE,GAAG,IAAI;;;;;;QAChC,KAAK,0HAAA,CAAA,eAAY,CAAC,KAAK;YACrB,qBAAO,8OAAC,kJAAA,CAAA,UAAW;gBAAE,GAAG,IAAI;;;;;;QAC9B,KAAK,0HAAA,CAAA,eAAY,CAAC,IAAI;YACpB,qBAAO,8OAAC,iJAAA,CAAA,UAAU;gBAAE,GAAG,IAAI;;;;;;QAC7B,KAAK,0HAAA,CAAA,eAAY,CAAC,SAAS;YACzB,qBAAO,8OAAC,sJAAA,CAAA,UAAe;gBAAE,GAAG,IAAI;;;;;;QAClC,KAAK,0HAAA,CAAA,eAAY,CAAC,KAAK;YACrB,qBAAO,8OAAC,iKAAA,CAAA,UAAW;gBAAE,GAAG,IAAI;;;;;;QAC9B,KAAK,0HAAA,CAAA,eAAY,CAAC,IAAI;YACpB,qBAAO,8OAAC,iJAAA,CAAA,UAAU;gBAAE,GAAG,IAAI;;;;;;QAC7B,KAAK,0HAAA,CAAA,eAAY,CAAC,IAAI;YACpB,qBAAO,8OAAC,iJAAA,CAAA,UAAU;gBAAE,GAAG,IAAI;;;;;;QAC7B,KAAK,0HAAA,CAAA,eAAY,CAAC,OAAO;YACvB,qBAAO,8OAAC,oJAAA,CAAA,UAAa;;;;;QACvB,KAAK,0HAAA,CAAA,eAAY,CAAC,QAAQ;YACxB,qBAAO,8OAAC,qJAAA,CAAA,UAAc;gBAAE,GAAG,IAAI;;;;;;IACnC;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 1825, "column": 0}, "map": {"version":3,"sources":["file:///Users/elioglima/projects/neocoode/sdk-cortex/plugins/luma/src/components/renderMessageChat.tsx"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\n'use client';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { CoreMessageResponse, IResponseChat } from '@/interface/chats';\nimport { sendMessageRequest } from '@/modules/sendMessage/slice';\nimport { showToast } from '@/modules/toast/slice';\nimport { RootState } from '@/store';\nimport { useTheme } from '@/themes/themeContext';\nimport RenderMessage from './renderMessage';\n\ninterface iprops {\n  messageResponse?: CoreMessageResponse;\n}\n\n\nconst RenderMessageChat: React.FC<iprops> = ({ messageResponse }) => {\n  const { themeSelected } = useTheme();\n  const dispatch = useDispatch();\n  \n  const messagesRef = useRef<HTMLDivElement>(null);\n  const chatSelectedState = useSelector((state: RootState) => state.chatSelected);\n  const [messages, setMessages] = useState<IResponseChat[]>([]);\n\n  const formattedMessageToMessage = async (responses: CoreMessageResponse[]): Promise<IResponseChat[]> => {\n    try {\n      let messages: IResponseChat[] = [];\n      if (Array.isArray(responses)) {\n        for (const response of responses) {\n          messages.push({ type: \"user\", value: response.message, onReplay: () => {\n            if (!chatSelectedState.chatId) {\n              dispatch(showToast({ message: 'Selecione um chat para enviar a mensagem', type: 'error' }));\n              return;\n            }\n            dispatch(sendMessageRequest({ chatId: chatSelectedState.chatId, message: response.message }));\n          } });\n\n          if (Array.isArray(responses)) {\n            for (const responseItem of response.response) {\n              messages.push({ type: responseItem.type, value: responseItem.value });\n            }\n          }\n          messages.push({ type: \"divider\", value: \"\" });\n        }\n      }\n\n      const processedMessages: IResponseChat[] = [];\n      let currentLinkGroup: string[] = [];\n      \n      for (let i = 0; i < messages.length; i++) {\n        const currentMessage = messages[i];\n        if (currentMessage.type === 'link') {\n          if (typeof currentMessage.value === 'string') {\n            currentLinkGroup.push(currentMessage.value);\n          }\n          \n          if (i === messages.length - 1 || messages[i + 1].type !== 'link') {\n            if (currentLinkGroup.length > 1) {\n              processedMessages.push({\n                type: 'groupLink',\n                value: currentLinkGroup\n              });\n              currentLinkGroup = [];\n            } else {\n              processedMessages.push(currentMessage);\n            }\n          }\n        } else {\n          processedMessages.push(currentMessage);\n        }\n      }\n\n      messages = processedMessages;\n\n      setMessages(messages);\n      return messages;\n    } catch (error) {\n      dispatch(showToast({ message: 'Erro ao processar as mensagens', type: 'error' }));\n      console.error('Erro ao processar mensagens:', error);\n      return [];\n    }\n  };\n\n  useEffect(() => {\n    formattedMessageToMessage(chatSelectedState?.messages);\n  }, [chatSelectedState?.messages]);\n\n  useEffect(() => {\n    if (messagesRef.current) {\n      messagesRef.current.scrollTo({\n        top: messagesRef.current.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n  }, [messages, messageResponse]);\n\n  return (\n    <div\n      ref={messagesRef}\n      className={`flex h-full w-full overflow-y-auto px-[6%] pt-10 pb-10`}\n    >\n      <div className=\"flex flex-col w-full\">\n        {messages.length > 0 && messages.map((message, index) => (\n          <div key={index}\n            className={`flex flex-row ${message.type === 'user' ? 'justify-end' : 'justify-start'} items-center ${themeSelected.spacing.msmall}`}\n          >\n            <RenderMessage key={`${message.type}-${index}`} {...message} />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default RenderMessageChat;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1973, "column": 0}, "map": {"version":3,"sources":["file:///Users/elioglima/projects/neocoode/sdk-cortex/plugins/luma/src/components/customChat.tsx"],"sourcesContent":["'use client';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport CustomHeader from '@/components/customHeader';\nimport LeftSidebar from '@/components/leftSidebar';\nimport { chatSelectedMessageClear } from '@/modules/chatSelected/slice';\nimport { sendMessageRequest } from '@/modules/sendMessage/slice';\nimport { RootState } from '@/store';\nimport { useTheme } from '@/themes/themeContext';\nimport InputMessage from './inputMessage/inputMessage';\nimport ProcessMessageStatus from './processMessageStatus';\nimport CustomMessageChat from './renderMessageChat';\n\nconst CustomChat: React.FC = () => {\n  const { themeSelected } = useTheme();\n  const dispatch = useDispatch();\n\n  const [isSidebarVisible, setIsSidebarVisible] = useState(false);\n  const [message, setMessage] = useState('');\n\n  const chatSelectedState = useSelector((state: RootState) => state.chatSelected);\n\n  useEffect(() => {\n    dispatch(chatSelectedMessageClear());\n  }, []);\n\n  const handleChatSelect = (chatId: string) => {\n    console.log('Chat selecionado:', chatId);\n  };\n\n  const toggleSidebar = () => {\n    setIsSidebarVisible(!isSidebarVisible);\n  };\n\n  const handleSubmit = (e?: React.FormEvent) => {\n    e?.preventDefault();\n    if (!message.trim()) return;\n\n    if (!chatSelectedState.chatId) {\n      console.error('Chat ID não selecionado');\n      return;\n    }\n\n    dispatch(sendMessageRequest({ chatId: chatSelectedState.chatId, message }));\n    setMessage('');\n  };\n\n  return (\n    <div className={`flex w-full h-screen ${themeSelected.colors.background}`}>\n      <LeftSidebar onSelectChat={handleChatSelect} isSidebarVisible={isSidebarVisible} />\n\n      <main className=\"flex-1 flex flex-col\">\n        <div className=\"flex h-full  flex-col relative \">\n          <CustomHeader toggleSidebar={toggleSidebar} isSidebarVisible={isSidebarVisible} />\n          <ProcessMessageStatus />\n          <CustomMessageChat />\n          <InputMessage\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n            onSubmit={handleSubmit}\n          />\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default CustomChat;\n\n"],"names":[],"mappings":";;;;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAZA;;;;;;;;;;;;AAcA,MAAM,aAAuB;IAC3B,MAAM,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,8HAAA,CAAA,WAAQ,AAAD;IACjC,MAAM,WAAW,CAAA,GAAA,yJAAA,CAAA,cAAW,AAAD;IAE3B,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,MAAM,oBAAoB,CAAA,GAAA,yJAAA,CAAA,cAAW,AAAD,EAAE,CAAC,QAAqB,MAAM,YAAY;IAE9E,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,SAAS,CAAA,GAAA,uIAAA,CAAA,2BAAwB,AAAD;IAClC,GAAG,EAAE;IAEL,MAAM,mBAAmB,CAAC;QACxB,QAAQ,GAAG,CAAC,qBAAqB;IACnC;IAEA,MAAM,gBAAgB;QACpB,oBAAoB,CAAC;IACvB;IAEA,MAAM,eAAe,CAAC;QACpB,GAAG;QACH,IAAI,CAAC,QAAQ,IAAI,IAAI;QAErB,IAAI,CAAC,kBAAkB,MAAM,EAAE;YAC7B,QAAQ,KAAK,CAAC;YACd;QACF;QAEA,SAAS,CAAA,GAAA,sIAAA,CAAA,qBAAkB,AAAD,EAAE;YAAE,QAAQ,kBAAkB,MAAM;YAAE;QAAQ;QACxE,WAAW;IACb;IAEA,qBACE,8OAAC;QAAI,WAAW,CAAC,qBAAqB,EAAE,cAAc,MAAM,CAAC,UAAU,EAAE;;0BACvE,8OAAC,iIAAA,CAAA,UAAW;gBAAC,cAAc;gBAAkB,kBAAkB;;;;;;0BAE/D,8OAAC;gBAAK,WAAU;0BACd,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC,kIAAA,CAAA,UAAY;4BAAC,eAAe;4BAAe,kBAAkB;;;;;;sCAC9D,8OAAC,0IAAA,CAAA,UAAoB;;;;;sCACrB,8OAAC,uIAAA,CAAA,UAAiB;;;;;sCAClB,8OAAC,kJAAA,CAAA,UAAY;4BACX,OAAO;4BACP,UAAU,CAAC,IAAM,WAAW,EAAE,MAAM,CAAC,KAAK;4BAC1C,UAAU;;;;;;;;;;;;;;;;;;;;;;;AAMtB;uCAEe","debugId":null}},
    {"offset": {"line": 2095, "column": 0}, "map": {"version":3,"sources":["file:///Users/elioglima/projects/neocoode/sdk-cortex/plugins/luma/src/app/chat/page.tsx"],"sourcesContent":["'use client';\n\nimport { useRouter } from 'next/navigation';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport CustomChat from '@/components/customChat';\nimport { validateSessionRequest } from '@/modules/session/slice';\nimport { RootState } from '@/store';\n\nexport default function ChatPage() {\n  const router = useRouter();\n\n  const dispatch = useDispatch();\n  const { valid, loading, token  } = useSelector((state: RootState) => state.session);\n\n  useEffect(() => {\n    dispatch(validateSessionRequest());\n  }, []);\n\n  useEffect(() => {\n    if ((!loading && !valid) || (!token)) {\n        router.push('/splash');\n    }\n  }, [loading, valid, router, token]);\n  \n  return <CustomChat />;\n}"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AACA;AAPA;;;;;;;AAUe,SAAS;IACtB,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,WAAW,CAAA,GAAA,yJAAA,CAAA,cAAW,AAAD;IAC3B,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAG,GAAG,CAAA,GAAA,yJAAA,CAAA,cAAW,AAAD,EAAE,CAAC,QAAqB,MAAM,OAAO;IAElF,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,SAAS,CAAA,GAAA,kIAAA,CAAA,yBAAsB,AAAD;IAChC,GAAG,EAAE;IAEL,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,AAAC,CAAC,WAAW,CAAC,SAAW,CAAC,OAAQ;YAClC,OAAO,IAAI,CAAC;QAChB;IACF,GAAG;QAAC;QAAS;QAAO;QAAQ;KAAM;IAElC,qBAAO,8OAAC,gIAAA,CAAA,UAAU;;;;;AACpB","debugId":null}}]
}