{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///Users/elioglima/projects/neocoode/sdk-cortex/plugins/luma/src/components/leftSidebar.tsx"],"sourcesContent":["'use client';\nimport React, { useEffect, useState } from 'react';\n\ninterface LeftSidebarProps {\n  onSelectChat?: (chatId: string) => void;\n  isSidebarVisible: boolean;\n}\n\nconst LeftSidebar: React.FC<LeftSidebarProps> = ({ onSelectChat, isSidebarVisible }) => {\n  const [renderContent, setRenderContent] = useState(isSidebarVisible);\n\n  // Controla renderização interna com atraso para permitir a animação de fechamento\n  useEffect(() => {\n    if (isSidebarVisible) {\n      setRenderContent(true);\n    } else {\n      const timeout = setTimeout(() => setRenderContent(false), 300); // mesma duração da transição\n      return () => clearTimeout(timeout);\n    }\n  }, [isSidebarVisible]);\n\n  return (\n    <aside\n      className={`bg-[#1e1e1e] text-white flex flex-col h-full overflow-hidden transition-all duration-300 ${\n        isSidebarVisible ? 'w-80 opacity-100' : 'w-0 opacity-0'\n      }`}\n    >\n      {renderContent && (\n        <>\n          {/* Topo */}\n          <div className=\"p-4 border-b border-gray-700 flex justify-between items-center\">\n            <h3 className=\"font-semibold text-2xl\">Chatbot</h3>\n            <button className=\"text-white text-4xl\">+</button>\n          </div>\n\n          {/* Centro - Lista de Chats */}\n          <div className=\"flex-grow overflow-y-auto p-4\">\n            <div className=\"space-y-2\">\n              <div className=\"p-2 hover:bg-gray-700 rounded-lg cursor-pointer\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"w-8 h-8 rounded-full bg-gray-600\"></div>\n                  <div>\n                    <p className=\"font-medium\">Chat #1</p>\n                    <p className=\"text-sm text-gray-400\">Última mensagem...</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Rodapé */}\n          <div className=\"p-4\">\n            {/* <button className=\"w-full py-2 px-4 bg-blue-600 hover:bg-blue-700 rounded-lg text-white font-medium transition-colors\">\n              Novo Chat\n            </button> */}\n          </div>\n        </>\n      )}\n    </aside>\n  );\n};\n\nexport default LeftSidebar;\n"],"names":[],"mappings":";;;;AACA;AADA;;;AAQA,MAAM,cAA0C,CAAC,EAAE,YAAY,EAAE,gBAAgB,EAAE;IACjF,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEnD,kFAAkF;IAClF,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,kBAAkB;YACpB,iBAAiB;QACnB,OAAO;YACL,MAAM,UAAU,WAAW,IAAM,iBAAiB,QAAQ,MAAM,6BAA6B;YAC7F,OAAO,IAAM,aAAa;QAC5B;IACF,GAAG;QAAC;KAAiB;IAErB,qBACE,8OAAC;QACC,WAAW,CAAC,yFAAyF,EACnG,mBAAmB,qBAAqB,iBACxC;kBAED,+BACC;;8BAEE,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;sCAAyB;;;;;;sCACvC,8OAAC;4BAAO,WAAU;sCAAsB;;;;;;;;;;;;8BAI1C,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAI,WAAU;;;;;;kDACf,8OAAC;;0DACC,8OAAC;gDAAE,WAAU;0DAAc;;;;;;0DAC3B,8OAAC;gDAAE,WAAU;0DAAwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8BAQ/C,8OAAC;oBAAI,WAAU;;;;;;;;;;;;;AASzB;uCAEe","debugId":null}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":["file:///Users/elioglima/projects/neocoode/sdk-cortex/plugins/luma/src/components/svgIcon.tsx"],"sourcesContent":["/* eslint-disable @next/next/no-img-element */\n'use client';\nimport React from 'react';\n\ninterface SvgIconProps {\n  name: string; // ex: \"send\", \"edit\", \"magic\"\n  width?: number;\n  height?: number;\n  className?: string;\n  alt?: string;\n}\n\nconst SvgIcon: React.FC<SvgIconProps> = ({\n  name,\n  width = 45,\n  height = 45,\n  className = '',\n  alt = '',\n}) => {\n  return (\n    <img\n      src={`/assets/svg/${name}.svg`}\n      alt={alt || name}\n      width={width}\n      height={height}\n      className={`rounded-full p-1 ${className}`}\n      loading=\"lazy\"\n      draggable={false}\n    />\n  );\n};\n\nexport default SvgIcon;\n"],"names":[],"mappings":"AAAA,4CAA4C;;;;AAC5C;;AAWA,MAAM,UAAkC,CAAC,EACvC,IAAI,EACJ,QAAQ,EAAE,EACV,SAAS,EAAE,EACX,YAAY,EAAE,EACd,MAAM,EAAE,EACT;IACC,qBACE,8OAAC;QACC,KAAK,CAAC,YAAY,EAAE,KAAK,IAAI,CAAC;QAC9B,KAAK,OAAO;QACZ,OAAO;QACP,QAAQ;QACR,WAAW,CAAC,iBAAiB,EAAE,WAAW;QAC1C,SAAQ;QACR,WAAW;;;;;;AAGjB;uCAEe","debugId":null}},
    {"offset": {"line": 192, "column": 0}, "map": {"version":3,"sources":["file:///Users/elioglima/projects/neocoode/sdk-cortex/plugins/luma/src/components/inputMessage.tsx"],"sourcesContent":["'use client';\nimport SvgIcon from '@/components/svgIcon';\nimport React, { useEffect, useRef } from 'react';\n\ninterface InputMessageProps {\n  onSend?: () => void;\n  onAdd?: () => void;\n  placeholder?: string;\n  value: string;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onSubmit?: (e?: React.FormEvent) => void;\n}\n\nconst InputMessage: React.FC<InputMessageProps> = ({\n  onAdd,\n  placeholder = 'Digite sua mensagem...',\n  value,\n  onChange,\n  onSubmit,\n}) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    inputRef.current?.focus();\n  }, []);\n\n  return (\n    <form\n      onSubmit={onSubmit}\n      className=\"flex flex-col justify-between bg-[#1e1e1e] m-3 rounded-4xl overflow-hidden\"\n    >\n      <div className=\"flex items-center p-5 w-full overflow-hidden\">\n        <div className=\"flex items-center justify-between w-full bg-[#434343] rounded-2xl p-1\">\n          <div className=\"flex-1\">\n            <input\n              ref={inputRef}\n              type=\"text\"\n              value={value}\n              onChange={onChange}\n              placeholder={placeholder}\n              className=\"w-full p-2 bg-transparent text-white outline-none text-2xl\"\n              onKeyDown={(e) => {\n                if (e.key === 'Enter') {\n                  e.preventDefault();\n                  onSubmit?.();\n                }\n              }}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"flex justify-between items-center px-4 pb-4\">\n        <button\n          type=\"button\"\n          className=\"p-2 hover:bg-gray-700 rounded-full\"\n          onClick={onAdd}\n        >\n          <SvgIcon name=\"plus\" className=\"text-white bg-[#464646]\" />\n        </button>\n        <button\n          type=\"submit\"\n          className=\"p-2 hover:bg-gray-700 rounded-full\"\n          onClick={(e) => {\n            e.preventDefault(); // evita duplo envio se necessário\n            onSubmit?.();\n          }}\n        >\n          <SvgIcon name=\"record\" className=\"text-white bg-[#c5c5c5]\" />\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default InputMessage;\n"],"names":[],"mappings":";;;;AACA;AACA;AAFA;;;;AAaA,MAAM,eAA4C,CAAC,EACjD,KAAK,EACL,cAAc,wBAAwB,EACtC,KAAK,EACL,QAAQ,EACR,QAAQ,EACT;IACC,MAAM,WAAW,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAoB;IAE1C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,SAAS,OAAO,EAAE;IACpB,GAAG,EAAE;IAEL,qBACE,8OAAC;QACC,UAAU;QACV,WAAU;;0BAEV,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BACC,KAAK;4BACL,MAAK;4BACL,OAAO;4BACP,UAAU;4BACV,aAAa;4BACb,WAAU;4BACV,WAAW,CAAC;gCACV,IAAI,EAAE,GAAG,KAAK,SAAS;oCACrB,EAAE,cAAc;oCAChB;gCACF;4BACF;;;;;;;;;;;;;;;;;;;;;0BAKR,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBACC,MAAK;wBACL,WAAU;wBACV,SAAS;kCAET,cAAA,8OAAC,6HAAA,CAAA,UAAO;4BAAC,MAAK;4BAAO,WAAU;;;;;;;;;;;kCAEjC,8OAAC;wBACC,MAAK;wBACL,WAAU;wBACV,SAAS,CAAC;4BACR,EAAE,cAAc,IAAI,kCAAkC;4BACtD;wBACF;kCAEA,cAAA,8OAAC,6HAAA,CAAA,UAAO;4BAAC,MAAK;4BAAS,WAAU;;;;;;;;;;;;;;;;;;;;;;;AAK3C;uCAEe","debugId":null}},
    {"offset": {"line": 310, "column": 0}, "map": {"version":3,"sources":["file:///Users/elioglima/projects/neocoode/sdk-cortex/plugins/luma/src/components/customHeader.tsx"],"sourcesContent":["'use client';\nimport SvgIcon from '@/components/svgIcon';\nimport React from 'react';\n\ninterface CustomHeaderProps {\n    toggleSidebar: () => void;\n}\n\nconst CustomHeader: React.FC<CustomHeaderProps> = ({ toggleSidebar }) => {\n    return (\n        <header className=\"h-18 shadow-sm p-4 flex justify-between items-center\">\n            <div className=\"flex items-center gap-2\">\n                <button onClick={toggleSidebar} className=\"text-white\">\n                    <SvgIcon name=\"menu2\" className=\"text-white w-10 h-10\" />\n                </button>\n                <div className=\"text-white text-2xl\">Messaging Room</div>\n            </div>\n            <div className=\"flex items-center gap-2\">\n                <button className=\"bg-gray-700 text-white px-4 py-2 rounded-lg\">\n                    Logout\n                </button>\n            </div>\n        </header>\n    );\n};\n\nexport default CustomHeader;\n"],"names":[],"mappings":";;;;AACA;AADA;;;AAQA,MAAM,eAA4C,CAAC,EAAE,aAAa,EAAE;IAChE,qBACI,8OAAC;QAAO,WAAU;;0BACd,8OAAC;gBAAI,WAAU;;kCACX,8OAAC;wBAAO,SAAS;wBAAe,WAAU;kCACtC,cAAA,8OAAC,6HAAA,CAAA,UAAO;4BAAC,MAAK;4BAAQ,WAAU;;;;;;;;;;;kCAEpC,8OAAC;wBAAI,WAAU;kCAAsB;;;;;;;;;;;;0BAEzC,8OAAC;gBAAI,WAAU;0BACX,cAAA,8OAAC;oBAAO,WAAU;8BAA8C;;;;;;;;;;;;;;;;;AAMhF;uCAEe","debugId":null}},
    {"offset": {"line": 384, "column": 0}, "map": {"version":3,"sources":["file:///Users/elioglima/projects/neocoode/sdk-cortex/plugins/luma/src/components/customMessageChat.tsx"],"sourcesContent":["'use client';\nimport { CoreMessageResponse } from '@/interface/chats';\nimport React, { useRef, useEffect } from 'react';\n\ninterface CustomMessageChatProps {\n  messageResponse?: CoreMessageResponse;\n}\n\nconst CustomMessageChat: React.FC<CustomMessageChatProps> = ({ messageResponse }) => {\n  const messagesRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    messagesRef.current?.scrollTo({\n      top: messagesRef.current.scrollHeight,\n      behavior: 'smooth',\n    });\n  }, [messageResponse]);\n\n  return (\n    <div ref={messagesRef} className=\"flex-1 overflow-y-auto p-4\">\n      <div className=\"text-white\">{}</div>\n    </div>\n  );\n};\n\nexport default CustomMessageChat;\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAQA,MAAM,oBAAsD,CAAC,EAAE,eAAe,EAAE;IAC9E,MAAM,cAAc,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAkB;IAE3C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,YAAY,OAAO,EAAE,SAAS;YAC5B,KAAK,YAAY,OAAO,CAAC,YAAY;YACrC,UAAU;QACZ;IACF,GAAG;QAAC;KAAgB;IAEpB,qBACE,8OAAC;QAAI,KAAK;QAAa,WAAU;kBAC/B,cAAA,8OAAC;YAAI,WAAU;;;;;;;;;;;AAGrB;uCAEe","debugId":null}},
    {"offset": {"line": 425, "column": 0}, "map": {"version":3,"sources":["file:///Users/elioglima/projects/neocoode/sdk-cortex/plugins/luma/src/components/customChat.tsx"],"sourcesContent":["'use client';\nimport { useState } from 'react';\n\nimport LeftSidebar from '@/components/leftSidebar';\nimport InputMessage from '@/components/inputMessage';\nimport CustomHeader from '@/components/customHeader';\nimport CustomMessageChat from './customMessageChat';\nimport { CoreMessageResponse } from '@/interface/chats';\n\nconst CustomChat: React.FC = () => {\n  const [isSidebarVisible, setIsSidebarVisible] = useState(true);\n  const [message, setMessage] = useState('');\n  const [messageResponse, setMessageResponse] = useState<CoreMessageResponse>();\n  \n\n  const handleChatSelect = (chatId: string) => {\n    console.log('Chat selecionado:', chatId);\n  };\n\n  const toggleSidebar = () => {\n    setIsSidebarVisible(!isSidebarVisible);\n  };\n\n  const handleSubmit = (e?: React.FormEvent) => {\n    e?.preventDefault();\n    if (!message.trim()) return;\n\n    console.log('Mensagem enviada:', message);\n    setMessage('');\n  };\n\n  return (\n    <div className=\"flex w-full h-screen bg-black\">\n      <LeftSidebar onSelectChat={handleChatSelect} isSidebarVisible={isSidebarVisible} />\n\n      <main className=\"flex-1 flex flex-col\">\n        <CustomHeader toggleSidebar={toggleSidebar} />\n        <div className=\"flex-1 px-[4%] py-2 flex flex-col justify-between\">\n          <CustomMessageChat messageResponse={messageResponse} />\n          <footer className=\"p-1\">\n            <InputMessage\n              value={message}\n              onChange={(e) => setMessage(e.target.value)}\n              onSubmit={handleSubmit}\n            />\n            <div className=\"flex justify-center items-center p-3 text-1xl\">\n              Luma Beta - 04/2025\n            </div>\n          </footer>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default CustomChat;\n"],"names":[],"mappings":";;;;AACA;AAEA;AACA;AACA;AACA;AANA;;;;;;;AASA,MAAM,aAAuB;IAC3B,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD;IAGrD,MAAM,mBAAmB,CAAC;QACxB,QAAQ,GAAG,CAAC,qBAAqB;IACnC;IAEA,MAAM,gBAAgB;QACpB,oBAAoB,CAAC;IACvB;IAEA,MAAM,eAAe,CAAC;QACpB,GAAG;QACH,IAAI,CAAC,QAAQ,IAAI,IAAI;QAErB,QAAQ,GAAG,CAAC,qBAAqB;QACjC,WAAW;IACb;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,iIAAA,CAAA,UAAW;gBAAC,cAAc;gBAAkB,kBAAkB;;;;;;0BAE/D,8OAAC;gBAAK,WAAU;;kCACd,8OAAC,kIAAA,CAAA,UAAY;wBAAC,eAAe;;;;;;kCAC7B,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,uIAAA,CAAA,UAAiB;gCAAC,iBAAiB;;;;;;0CACpC,8OAAC;gCAAO,WAAU;;kDAChB,8OAAC,kIAAA,CAAA,UAAY;wCACX,OAAO;wCACP,UAAU,CAAC,IAAM,WAAW,EAAE,MAAM,CAAC,KAAK;wCAC1C,UAAU;;;;;;kDAEZ,8OAAC;wCAAI,WAAU;kDAAgD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQ3E;uCAEe","debugId":null}},
    {"offset": {"line": 540, "column": 0}, "map": {"version":3,"sources":["file:///Users/elioglima/projects/neocoode/sdk-cortex/plugins/luma/src/app/chat/page.tsx"],"sourcesContent":["'use client';\n\nimport { RootState } from '@/store';\nimport { useRouter } from 'next/router';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport CustomChat from '@/components/customChat';\nimport { validateSessionRequest } from '@/modules/session/slice';\n\nexport default function ChatPage() {\n  const router = useRouter();\n\n  const dispatch = useDispatch();\n  const { valid, loading } = useSelector((state: RootState) => state.session);\n\n  useEffect(() => {\n    dispatch(validateSessionRequest());\n  }, []);\n\n  useEffect(() => {\n    if (!loading && valid) {\n        router.push('/splash');\n    }\n  }, [loading, valid, router]);\n  \n  return <CustomChat />;\n}"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AAEA;AACA;AARA;;;;;;;AAUe,SAAS;IACtB,MAAM,SAAS,CAAA,GAAA,8HAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,WAAW,CAAA,GAAA,yJAAA,CAAA,cAAW,AAAD;IAC3B,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,yJAAA,CAAA,cAAW,AAAD,EAAE,CAAC,QAAqB,MAAM,OAAO;IAE1E,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,SAAS,CAAA,GAAA,kIAAA,CAAA,yBAAsB,AAAD;IAChC,GAAG,EAAE;IAEL,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,WAAW,OAAO;YACnB,OAAO,IAAI,CAAC;QAChB;IACF,GAAG;QAAC;QAAS;QAAO;KAAO;IAE3B,qBAAO,8OAAC,gIAAA,CAAA,UAAU;;;;;AACpB","debugId":null}}]
}